{
  "name": "dmkscripting",
  "displayName": "Danmokou Scripting",
  "publisher": "Bagoum",
  "description": "Language extension for Danmokou's scripting language.",
  "repository": {"url": "https://github.com/Bagoum/DMKLanguageClientVSCode"},
  "version": "1.3.0",
  "icon": "ext_icon.png",
  "engines": {
    "vscode": "^1.69.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onCommand:bdsl.activate",
    "onLanguage:bdsl"
  ],
  "main": "./out/extension.js",
  "configurationDefaults": {
    "bdsl": {
      "editor.semanticHighlighting.enabled": true
    }
  },
  "contributes": {
		"grammars": [
			{
				"language": "bdsl",
				"scopeName": "source.bdsl",
				"path": "./language-grammar.json"
			}
		],
    "languages": [{
      "id": "bdsl",
      "aliases": ["BDSL"],
      "extensions": [".bdsl"],
      "configuration": "./language-configuration.json"
    }],
    "commands": [
      {
          "command": "bdsl.restart",
          "title": "Restart DMK language server"
      }
    ],
    "configuration": {
      "title": "DMK Language Server",
      "properties": {
        "danmokou.DLL Path": {
          "type": "string",
          "default": "",
          "description": "If you have custom DMK functions, you can enable them by building your project and setting this to the directory that looks like `...Danmokou\\Builds\\BUILDNAME\\Danmokou_Data\\Managed` here."
        },
        "danmokou.YAML Path": {
          "type": "string",
          "default": "",
          "description": "If you have custom DMK functions, you can add documentation-on-hover by setting this to the path to the docfx YAML files (like `...Danmokou\\docs\\api`)."
        },
        "danmokou.Inlay Hints": {
          "type": "boolean",
          "default": false,
          "description": "Enable inlay hints for function calls."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "glob": "^8.0.3",
    "vscode-languageclient": "^8.0.0",
    "vscode-jsonrpc": "^4.0.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.69.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "eslint": "^8.20.0",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4",
    "@vscode/test-electron": "^2.1.5"
  }
}
