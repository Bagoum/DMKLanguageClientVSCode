### YamlMime:ManagedReference
items:
- uid: Danmokou.SM.FinishPSM
  commentId: T:Danmokou.SM.FinishPSM
  id: FinishPSM
  parent: Danmokou.SM
  children:
  - Danmokou.SM.FinishPSM.#ctor(Danmokou.SM.StateMachine)
  - Danmokou.SM.FinishPSM.Start(Danmokou.SM.SMHandoff)
  - Danmokou.SM.FinishPSM.Trigger(BehaviorEntity,GenCtx,ICancellee)
  langs:
  - csharp
  - vb
  name: FinishPSM
  nameWithType: FinishPSM
  fullName: Danmokou.SM.FinishPSM
  type: Class
  source:
    id: FinishPSM
    path: ''
    startLine: 13430
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  summary: "\n`finish`: Child of PhaseSM. When the executing BEH finishes this phase due to timeout (shift-phase) or loss of HP,\nruns the child SM on a new inode.\n<br />Does not run if the executing BEH is destroyed by a cull command, or goes out of range, or the scene is changed.\n"
  example: []
  syntax:
    content: 'public class FinishPSM : StateMachine'
    content.vb: >-
      Public Class FinishPSM
          Inherits StateMachine
  inheritance:
  - System.Object
  - Danmokou.SM.StateMachine
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Danmokou.SM.FinishPSM.#ctor(Danmokou.SM.StateMachine)
  commentId: M:Danmokou.SM.FinishPSM.#ctor(Danmokou.SM.StateMachine)
  id: '#ctor(Danmokou.SM.StateMachine)'
  parent: Danmokou.SM.FinishPSM
  langs:
  - csharp
  - vb
  name: FinishPSM(StateMachine)
  nameWithType: FinishPSM.FinishPSM(StateMachine)
  fullName: Danmokou.SM.FinishPSM.FinishPSM(Danmokou.SM.StateMachine)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 13432
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public FinishPSM(StateMachine state)
    parameters:
    - id: state
      type: Danmokou.SM.StateMachine
    content.vb: Public Sub New(state As StateMachine)
  overload: Danmokou.SM.FinishPSM.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Danmokou.SM.FinishPSM.Trigger(BehaviorEntity,GenCtx,ICancellee)
  commentId: M:Danmokou.SM.FinishPSM.Trigger(BehaviorEntity,GenCtx,ICancellee)
  id: Trigger(BehaviorEntity,GenCtx,ICancellee)
  parent: Danmokou.SM.FinishPSM
  langs:
  - csharp
  - vb
  name: Trigger(BehaviorEntity, GenCtx, ICancellee)
  nameWithType: FinishPSM.Trigger(BehaviorEntity, GenCtx, ICancellee)
  fullName: Danmokou.SM.FinishPSM.Trigger(BehaviorEntity, GenCtx, ICancellee)
  type: Method
  source:
    id: Trigger
    path: ''
    startLine: 13434
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public void Trigger(BehaviorEntity Exec, GenCtx gcx, ICancellee cT)
    parameters:
    - id: Exec
      type: BehaviorEntity
    - id: gcx
      type: GenCtx
    - id: cT
      type: ICancellee
    content.vb: Public Sub Trigger(Exec As BehaviorEntity, gcx As GenCtx, cT As ICancellee)
  overload: Danmokou.SM.FinishPSM.Trigger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Danmokou.SM.FinishPSM.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.FinishPSM.Start(Danmokou.SM.SMHandoff)
  id: Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.FinishPSM
  langs:
  - csharp
  - vb
  name: Start(SMHandoff)
  nameWithType: FinishPSM.Start(SMHandoff)
  fullName: Danmokou.SM.FinishPSM.Start(Danmokou.SM.SMHandoff)
  type: Method
  source:
    id: Start
    path: ''
    startLine: 13438
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public override Task Start(SMHandoff smh)
    parameters:
    - id: smh
      type: Danmokou.SM.SMHandoff
    return:
      type: Task
    content.vb: Public Overrides Function Start(smh As SMHandoff) As Task
  overridden: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  overload: Danmokou.SM.FinishPSM.Start*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Danmokou.SM
  commentId: N:Danmokou.SM
  name: Danmokou.SM
  nameWithType: Danmokou.SM
  fullName: Danmokou.SM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Danmokou.SM.StateMachine
  commentId: T:Danmokou.SM.StateMachine
  parent: Danmokou.SM
  name: StateMachine
  nameWithType: StateMachine
  fullName: Danmokou.SM.StateMachine
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.SM.FinishPSM.#ctor*
  commentId: Overload:Danmokou.SM.FinishPSM.#ctor
  name: FinishPSM
  nameWithType: FinishPSM.FinishPSM
  fullName: Danmokou.SM.FinishPSM.FinishPSM
- uid: Danmokou.SM.FinishPSM.Trigger*
  commentId: Overload:Danmokou.SM.FinishPSM.Trigger
  name: Trigger
  nameWithType: FinishPSM.Trigger
  fullName: Danmokou.SM.FinishPSM.Trigger
- uid: BehaviorEntity
  isExternal: true
  name: BehaviorEntity
  nameWithType: BehaviorEntity
  fullName: BehaviorEntity
- uid: GenCtx
  isExternal: true
  name: GenCtx
  nameWithType: GenCtx
  fullName: GenCtx
- uid: ICancellee
  isExternal: true
  name: ICancellee
  nameWithType: ICancellee
  fullName: ICancellee
- uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.StateMachine
  name: Start(SMHandoff)
  nameWithType: StateMachine.Start(SMHandoff)
  fullName: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  spec.csharp:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.FinishPSM.Start*
  commentId: Overload:Danmokou.SM.FinishPSM.Start
  name: Start
  nameWithType: FinishPSM.Start
  fullName: Danmokou.SM.FinishPSM.Start
- uid: Danmokou.SM.SMHandoff
  commentId: T:Danmokou.SM.SMHandoff
  parent: Danmokou.SM
  name: SMHandoff
  nameWithType: SMHandoff
  fullName: Danmokou.SM.SMHandoff
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
