### YamlMime:ManagedReference
items:
- uid: Danmokou.DMath.Functions.GCXFRepo
  commentId: T:Danmokou.DMath.Functions.GCXFRepo
  id: GCXFRepo
  parent: Danmokou.DMath.Functions
  children:
  - Danmokou.DMath.Functions.GCXFRepo._Fake(System.Func{TExArgCtx,TEx})
  - Danmokou.DMath.Functions.GCXFRepo.Max
  - Danmokou.DMath.Functions.GCXFRepo.RV2Zero
  - Danmokou.DMath.Functions.GCXFRepo.V2Zero
  langs:
  - csharp
  - vb
  name: GCXFRepo
  nameWithType: GCXFRepo
  fullName: Danmokou.DMath.Functions.GCXFRepo
  type: Class
  source:
    id: GCXFRepo
    path: ''
    startLine: 8869
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.DMath.Functions
  syntax:
    content: public static class GCXFRepo
    content.vb: Public Module GCXFRepo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Danmokou.DMath.Functions.GCXFRepo._Fake(System.Func{TExArgCtx,TEx})
  commentId: M:Danmokou.DMath.Functions.GCXFRepo._Fake(System.Func{TExArgCtx,TEx})
  id: _Fake(System.Func{TExArgCtx,TEx})
  parent: Danmokou.DMath.Functions.GCXFRepo
  langs:
  - csharp
  - vb
  name: _Fake(Func<TExArgCtx, TEx>)
  nameWithType: GCXFRepo._Fake(Func<TExArgCtx, TEx>)
  fullName: Danmokou.DMath.Functions.GCXFRepo._Fake(System.Func<TExArgCtx, TEx>)
  type: Method
  source:
    id: _Fake
    path: ''
    startLine: 8871
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.DMath.Functions
  syntax:
    content: public static Func<TExArgCtx, TEx> _Fake(Func<TExArgCtx, TEx> target)
    parameters:
    - id: target
      type: System.Func{TExArgCtx,TEx}
    return:
      type: System.Func{TExArgCtx,TEx}
    content.vb: Public Shared Function _Fake(target As Func(Of TExArgCtx, TEx)) As Func(Of TExArgCtx, TEx)
  overload: Danmokou.DMath.Functions.GCXFRepo._Fake*
  nameWithType.vb: GCXFRepo._Fake(Func(Of TExArgCtx, TEx))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.DMath.Functions.GCXFRepo._Fake(System.Func(Of TExArgCtx, TEx))
  name.vb: _Fake(Func(Of TExArgCtx, TEx))
- uid: Danmokou.DMath.Functions.GCXFRepo.V2Zero
  commentId: F:Danmokou.DMath.Functions.GCXFRepo.V2Zero
  id: V2Zero
  parent: Danmokou.DMath.Functions.GCXFRepo
  langs:
  - csharp
  - vb
  name: V2Zero
  nameWithType: GCXFRepo.V2Zero
  fullName: Danmokou.DMath.Functions.GCXFRepo.V2Zero
  type: Field
  source:
    id: V2Zero
    path: ''
    startLine: 8883
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.DMath.Functions
  syntax:
    content: public static readonly GCXF<Vector2> V2Zero
    return:
      type: Danmokou.DMath.GCXF{Vector2}
    content.vb: Public Shared ReadOnly V2Zero As GCXF(Of Vector2)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Danmokou.DMath.Functions.GCXFRepo.RV2Zero
  commentId: F:Danmokou.DMath.Functions.GCXFRepo.RV2Zero
  id: RV2Zero
  parent: Danmokou.DMath.Functions.GCXFRepo
  langs:
  - csharp
  - vb
  name: RV2Zero
  nameWithType: GCXFRepo.RV2Zero
  fullName: Danmokou.DMath.Functions.GCXFRepo.RV2Zero
  type: Field
  source:
    id: RV2Zero
    path: ''
    startLine: 8884
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.DMath.Functions
  syntax:
    content: public static readonly GCXF<V2RV2> RV2Zero
    return:
      type: Danmokou.DMath.GCXF{V2RV2}
    content.vb: Public Shared ReadOnly RV2Zero As GCXF(Of V2RV2)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Danmokou.DMath.Functions.GCXFRepo.Max
  commentId: F:Danmokou.DMath.Functions.GCXFRepo.Max
  id: Max
  parent: Danmokou.DMath.Functions.GCXFRepo
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: GCXFRepo.Max
  fullName: Danmokou.DMath.Functions.GCXFRepo.Max
  type: Field
  source:
    id: Max
    path: ''
    startLine: 8886
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.DMath.Functions
  syntax:
    content: public static readonly GCXF<float> Max
    return:
      type: Danmokou.DMath.GCXF{System.Single}
    content.vb: Public Shared ReadOnly Max As GCXF(Of Single)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: Danmokou.DMath.Functions
  commentId: N:Danmokou.DMath.Functions
  name: Danmokou.DMath.Functions
  nameWithType: Danmokou.DMath.Functions
  fullName: Danmokou.DMath.Functions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.DMath.Functions.GCXFRepo._Fake*
  commentId: Overload:Danmokou.DMath.Functions.GCXFRepo._Fake
  name: _Fake
  nameWithType: GCXFRepo._Fake
  fullName: Danmokou.DMath.Functions.GCXFRepo._Fake
- uid: System.Func{TExArgCtx,TEx}
  commentId: T:System.Func{TExArgCtx,TEx}
  parent: System
  definition: System.Func`2
  name: Func<TExArgCtx, TEx>
  nameWithType: Func<TExArgCtx, TEx>
  fullName: System.Func<TExArgCtx, TEx>
  nameWithType.vb: Func(Of TExArgCtx, TEx)
  fullName.vb: System.Func(Of TExArgCtx, TEx)
  name.vb: Func(Of TExArgCtx, TEx)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TExArgCtx
    name: TExArgCtx
    nameWithType: TExArgCtx
    fullName: TExArgCtx
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TEx
    name: TEx
    nameWithType: TEx
    fullName: TEx
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TExArgCtx
    name: TExArgCtx
    nameWithType: TExArgCtx
    fullName: TExArgCtx
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TEx
    name: TEx
    nameWithType: TEx
    fullName: TEx
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.DMath.GCXF{Vector2}
  commentId: T:Danmokou.DMath.GCXF{Vector2}
  parent: Danmokou.DMath
  definition: Danmokou.DMath.GCXF`1
  name: GCXF<Vector2>
  nameWithType: GCXF<Vector2>
  fullName: Danmokou.DMath.GCXF<Vector2>
  nameWithType.vb: GCXF(Of Vector2)
  fullName.vb: Danmokou.DMath.GCXF(Of Vector2)
  name.vb: GCXF(Of Vector2)
  spec.csharp:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.DMath.GCXF`1
  commentId: T:Danmokou.DMath.GCXF`1
  name: GCXF<T>
  nameWithType: GCXF<T>
  fullName: Danmokou.DMath.GCXF<T>
  nameWithType.vb: GCXF(Of T)
  fullName.vb: Danmokou.DMath.GCXF(Of T)
  name.vb: GCXF(Of T)
  spec.csharp:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.DMath
  commentId: N:Danmokou.DMath
  name: Danmokou.DMath
  nameWithType: Danmokou.DMath
  fullName: Danmokou.DMath
- uid: Danmokou.DMath.GCXF{V2RV2}
  commentId: T:Danmokou.DMath.GCXF{V2RV2}
  parent: Danmokou.DMath
  definition: Danmokou.DMath.GCXF`1
  name: GCXF<V2RV2>
  nameWithType: GCXF<V2RV2>
  fullName: Danmokou.DMath.GCXF<V2RV2>
  nameWithType.vb: GCXF(Of V2RV2)
  fullName.vb: Danmokou.DMath.GCXF(Of V2RV2)
  name.vb: GCXF(Of V2RV2)
  spec.csharp:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: <
    nameWithType: <
    fullName: <
  - uid: V2RV2
    name: V2RV2
    nameWithType: V2RV2
    fullName: V2RV2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: V2RV2
    name: V2RV2
    nameWithType: V2RV2
    fullName: V2RV2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.DMath.GCXF{System.Single}
  commentId: T:Danmokou.DMath.GCXF{System.Single}
  parent: Danmokou.DMath
  definition: Danmokou.DMath.GCXF`1
  name: GCXF<Single>
  nameWithType: GCXF<Single>
  fullName: Danmokou.DMath.GCXF<System.Single>
  nameWithType.vb: GCXF(Of Single)
  fullName.vb: Danmokou.DMath.GCXF(Of System.Single)
  name.vb: GCXF(Of Single)
  spec.csharp:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Danmokou.DMath.GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: Danmokou.DMath.GCXF
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
