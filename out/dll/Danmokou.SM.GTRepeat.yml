### YamlMime:ManagedReference
items:
- uid: Danmokou.SM.GTRepeat
  commentId: T:Danmokou.SM.GTRepeat
  id: GTRepeat
  parent: Danmokou.SM
  children:
  - Danmokou.SM.GTRepeat.#ctor(GenCtxProperties{Danmokou.SM.StateMachine},Danmokou.SM.StateMachine[])
  - Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  langs:
  - csharp
  - vb
  name: GTRepeat
  nameWithType: GTRepeat
  fullName: Danmokou.SM.GTRepeat
  type: Class
  source:
    id: GTRepeat
    path: ''
    startLine: 12744
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  summary: "\n`gtr`: A generic repeater for StateMachines. Supports the same interface as `gcr`/`gir`.\n<br />Note: the constructor takes StateMachine[] and not List&lt;SM>, which means you must explicitly wrap multiple SMs in brackets.\n"
  example: []
  syntax:
    content: 'public class GTRepeat : UniversalSM'
    content.vb: >-
      Public Class GTRepeat
          Inherits UniversalSM
  inheritance:
  - System.Object
  - Danmokou.SM.StateMachine
  - Danmokou.SM.UniversalSM
  derivedClasses:
  - Danmokou.SM.GTRepeat2
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Danmokou.SM.GTRepeat.#ctor(GenCtxProperties{Danmokou.SM.StateMachine},Danmokou.SM.StateMachine[])
  commentId: M:Danmokou.SM.GTRepeat.#ctor(GenCtxProperties{Danmokou.SM.StateMachine},Danmokou.SM.StateMachine[])
  id: '#ctor(GenCtxProperties{Danmokou.SM.StateMachine},Danmokou.SM.StateMachine[])'
  parent: Danmokou.SM.GTRepeat
  langs:
  - csharp
  - vb
  name: GTRepeat(GenCtxProperties<StateMachine>, StateMachine[])
  nameWithType: GTRepeat.GTRepeat(GenCtxProperties<StateMachine>, StateMachine[])
  fullName: Danmokou.SM.GTRepeat.GTRepeat(GenCtxProperties<Danmokou.SM.StateMachine>, Danmokou.SM.StateMachine[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12879
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public GTRepeat(GenCtxProperties<StateMachine> props, StateMachine[] target)
    parameters:
    - id: props
      type: GenCtxProperties{Danmokou.SM.StateMachine}
    - id: target
      type: Danmokou.SM.StateMachine[]
    content.vb: Public Sub New(props As GenCtxProperties(Of StateMachine), target As StateMachine())
  overload: Danmokou.SM.GTRepeat.#ctor*
  nameWithType.vb: GTRepeat.GTRepeat(GenCtxProperties(Of StateMachine), StateMachine())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Danmokou.SM.GTRepeat.GTRepeat(GenCtxProperties(Of Danmokou.SM.StateMachine), Danmokou.SM.StateMachine())
  name.vb: GTRepeat(GenCtxProperties(Of StateMachine), StateMachine())
- uid: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  id: Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.GTRepeat
  langs:
  - csharp
  - vb
  name: Start(SMHandoff)
  nameWithType: GTRepeat.Start(SMHandoff)
  fullName: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  type: Method
  source:
    id: Start
    path: ''
    startLine: 12883
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public override async Task Start(SMHandoff smh)
    parameters:
    - id: smh
      type: Danmokou.SM.SMHandoff
    return:
      type: Task
    content.vb: Public Overrides Function Start(smh As SMHandoff) As Task
  overridden: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  overload: Danmokou.SM.GTRepeat.Start*
  modifiers.csharp:
  - public
  - override
  - async
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Danmokou.SM
  commentId: N:Danmokou.SM
  name: Danmokou.SM
  nameWithType: Danmokou.SM
  fullName: Danmokou.SM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Danmokou.SM.StateMachine
  commentId: T:Danmokou.SM.StateMachine
  parent: Danmokou.SM
  name: StateMachine
  nameWithType: StateMachine
  fullName: Danmokou.SM.StateMachine
- uid: Danmokou.SM.UniversalSM
  commentId: T:Danmokou.SM.UniversalSM
  parent: Danmokou.SM
  name: UniversalSM
  nameWithType: UniversalSM
  fullName: Danmokou.SM.UniversalSM
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.SM.GTRepeat.#ctor*
  commentId: Overload:Danmokou.SM.GTRepeat.#ctor
  name: GTRepeat
  nameWithType: GTRepeat.GTRepeat
  fullName: Danmokou.SM.GTRepeat.GTRepeat
- uid: GenCtxProperties{Danmokou.SM.StateMachine}
  commentId: '!:GenCtxProperties{Danmokou.SM.StateMachine}'
  definition: GenCtxProperties`1
  name: GenCtxProperties<StateMachine>
  nameWithType: GenCtxProperties<StateMachine>
  fullName: GenCtxProperties<Danmokou.SM.StateMachine>
  nameWithType.vb: GenCtxProperties(Of StateMachine)
  fullName.vb: GenCtxProperties(Of Danmokou.SM.StateMachine)
  name.vb: GenCtxProperties(Of StateMachine)
  spec.csharp:
  - uid: GenCtxProperties`1
    name: GenCtxProperties
    nameWithType: GenCtxProperties
    fullName: GenCtxProperties
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GenCtxProperties`1
    name: GenCtxProperties
    nameWithType: GenCtxProperties
    fullName: GenCtxProperties
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.StateMachine[]
  isExternal: true
  name: StateMachine[]
  nameWithType: StateMachine[]
  fullName: Danmokou.SM.StateMachine[]
  nameWithType.vb: StateMachine()
  fullName.vb: Danmokou.SM.StateMachine()
  name.vb: StateMachine()
  spec.csharp:
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: GenCtxProperties`1
  isExternal: true
  name: GenCtxProperties<>
  nameWithType: GenCtxProperties<>
  fullName: GenCtxProperties<>
  nameWithType.vb: GenCtxProperties(Of )
  fullName.vb: GenCtxProperties(Of )
  name.vb: GenCtxProperties(Of )
  spec.csharp:
  - uid: GenCtxProperties`1
    name: GenCtxProperties
    nameWithType: GenCtxProperties
    fullName: GenCtxProperties
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GenCtxProperties`1
    name: GenCtxProperties
    nameWithType: GenCtxProperties
    fullName: GenCtxProperties
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.StateMachine
  name: Start(SMHandoff)
  nameWithType: StateMachine.Start(SMHandoff)
  fullName: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  spec.csharp:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.GTRepeat.Start*
  commentId: Overload:Danmokou.SM.GTRepeat.Start
  name: Start
  nameWithType: GTRepeat.Start
  fullName: Danmokou.SM.GTRepeat.Start
- uid: Danmokou.SM.SMHandoff
  commentId: T:Danmokou.SM.SMHandoff
  parent: Danmokou.SM
  name: SMHandoff
  nameWithType: SMHandoff
  fullName: Danmokou.SM.SMHandoff
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
