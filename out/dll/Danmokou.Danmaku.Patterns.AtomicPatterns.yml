### YamlMime:ManagedReference
items:
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns
  commentId: T:Danmokou.Danmaku.Patterns.AtomicPatterns
  id: AtomicPatterns
  parent: Danmokou.Danmaku.Patterns
  children:
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Circ(TP4,BPRV2)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Complex(VTP,BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness(TP,BPY,TP4)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.dPather
  - Danmokou.Danmaku.Patterns.AtomicPatterns.DS(ReflectEx.Hoist{Vector2},ReflectEx.Hoist{Vector2},ExBPY,ExTP)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Erase``1(GCXF{``0})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Event``1(System.String,GCXF{``0})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Event0(System.String)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc(System.String,TP,BPRV2,TP4)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect(System.String,TP,BPRV2,TP4)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Inode(VTP,System.Nullable{StateMachine})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Laser(VTP,GCXF{System.Single},GCXF{System.Single},LaserOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Noop
  - Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Pather(System.Single,BPY,VTP,BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura(PowerAuraOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Rect(TP4,BPRV2)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.S(VTP)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser(GCXF{System.Single},LaserOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM(VTP,GCXF{System.Single},LaserOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SFX
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Simple(VTP,SBOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem
  - Danmokou.Danmaku.Patterns.AtomicPatterns.Summon(VTP,System.Nullable{StateMachine},BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR(RootedVTP,System.Nullable{StateMachine},BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP(RootedVTP,System.Nullable{StateMachine},BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ(System.Nullable{StateMachine},BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS(VTP,System.Nullable{StateMachine})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP(VTP,System.Nullable{StateMachine})
  - Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP(VTP,System.Nullable{StateMachine},BehOptions)
  - Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem
  langs:
  - csharp
  - vb
  name: AtomicPatterns
  nameWithType: AtomicPatterns
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns
  type: Class
  source:
    id: AtomicPatterns
    path: ''
    startLine: 5521
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nFunctions that describe atomic synchronous actions.\n"
  example: []
  syntax:
    content: public static class AtomicPatterns
    content.vb: Public Module AtomicPatterns
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.DS(ReflectEx.Hoist{Vector2},ReflectEx.Hoist{Vector2},ExBPY,ExTP)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.DS(ReflectEx.Hoist{Vector2},ReflectEx.Hoist{Vector2},ExBPY,ExTP)
  id: DS(ReflectEx.Hoist{Vector2},ReflectEx.Hoist{Vector2},ExBPY,ExTP)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: DS(ReflectEx.Hoist<Vector2>, ReflectEx.Hoist<Vector2>, ExBPY, ExTP)
  nameWithType: AtomicPatterns.DS(ReflectEx.Hoist<Vector2>, ReflectEx.Hoist<Vector2>, ExBPY, ExTP)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.DS(ReflectEx.Hoist<Vector2>, ReflectEx.Hoist<Vector2>, ExBPY, ExTP)
  type: Method
  source:
    id: DS
    path: ''
    startLine: 5205
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nEmpty-guided fire that points in the same direction as the empty bullet.\n<br />Note: when following polar bullets, you should use this.\n"
  example: []
  syntax:
    content: public static SyncPattern DS(ReflectEx.Hoist<Vector2> hoistLoc, ReflectEx.Hoist<Vector2> hoistDir, ExBPY indexer, ExTP offset)
    parameters:
    - id: hoistLoc
      type: ReflectEx.Hoist{Vector2}
    - id: hoistDir
      type: ReflectEx.Hoist{Vector2}
    - id: indexer
      type: ExBPY
    - id: offset
      type: ExTP
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function DS(hoistLoc As ReflectEx.Hoist(Of Vector2), hoistDir As ReflectEx.Hoist(Of Vector2), indexer As ExBPY, offset As ExTP) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.DS*
  nameWithType.vb: AtomicPatterns.DS(ReflectEx.Hoist(Of Vector2), ReflectEx.Hoist(Of Vector2), ExBPY, ExTP)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.DS(ReflectEx.Hoist(Of Vector2), ReflectEx.Hoist(Of Vector2), ExBPY, ExTP)
  name.vb: DS(ReflectEx.Hoist(Of Vector2), ReflectEx.Hoist(Of Vector2), ExBPY, ExTP)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.dPather
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.dPather
  id: dPather
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: dPather()
  nameWithType: AtomicPatterns.dPather()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.dPather()
  type: Method
  source:
    id: dPather
    path: ''
    startLine: 5212
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern dPather()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function dPather As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.dPather*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase``1(GCXF{``0})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Erase``1(GCXF{``0})
  id: Erase``1(GCXF{``0})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Erase<T>(GCXF<T>)
  nameWithType: AtomicPatterns.Erase<T>(GCXF<T>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase<T>(GCXF<T>)
  type: Method
  source:
    id: Erase
    path: ''
    startLine: 5527
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Erase<T>(GCXF<T> meth)
    parameters:
    - id: meth
      type: GCXF{{T}}
    typeParameters:
    - id: T
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Erase(Of T)(meth As GCXF(Of T)) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase*
  nameWithType.vb: AtomicPatterns.Erase(Of T)(GCXF(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase(Of T)(GCXF(Of T))
  name.vb: Erase(Of T)(GCXF(Of T))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Noop
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Noop
  id: Noop
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Noop()
  nameWithType: AtomicPatterns.Noop()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Noop()
  type: Method
  source:
    id: Noop
    path: ''
    startLine: 5535
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nDo nothing.\n"
  example: []
  syntax:
    content: public static SyncPattern Noop()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function Noop As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Noop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SFX
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SFX
  id: SFX
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SFX()
  nameWithType: AtomicPatterns.SFX()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SFX()
  type: Method
  source:
    id: SFX
    path: ''
    startLine: 5540
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nPlay the audio clip defined by the style.\n"
  example: []
  syntax:
    content: public static SyncPattern SFX()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function SFX As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SFX*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Event``1(System.String,GCXF{``0})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Event``1(System.String,GCXF{``0})
  id: Event``1(System.String,GCXF{``0})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Event<T>(String, GCXF<T>)
  nameWithType: AtomicPatterns.Event<T>(String, GCXF<T>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Event<T>(System.String, GCXF<T>)
  type: Method
  source:
    id: Event
    path: ''
    startLine: 5546
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nInvoke the provided event with the provided value.\n"
  example: []
  syntax:
    content: public static SyncPattern Event<T>(string evName, GCXF<T> value)
    parameters:
    - id: evName
      type: System.String
    - id: value
      type: GCXF{{T}}
    typeParameters:
    - id: T
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Event(Of T)(evName As String, value As GCXF(Of T)) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Event*
  nameWithType.vb: AtomicPatterns.Event(Of T)(String, GCXF(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Event(Of T)(System.String, GCXF(Of T))
  name.vb: Event(Of T)(String, GCXF(Of T))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Event0(System.String)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Event0(System.String)
  id: Event0(System.String)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Event0(String)
  nameWithType: AtomicPatterns.Event0(String)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Event0(System.String)
  type: Method
  source:
    id: Event0
    path: ''
    startLine: 5553
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nInvoke one of the provided unit events according to the firing index.\n"
  example: []
  syntax:
    content: public static SyncPattern Event0(string evName)
    parameters:
    - id: evName
      type: System.String
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Event0(evName As String) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Event0*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem
  id: LifeItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: LifeItem()
  nameWithType: AtomicPatterns.LifeItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem()
  type: Method
  source:
    id: LifeItem
    path: ''
    startLine: 5557
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern LifeItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function LifeItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem
  id: ValueItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: ValueItem()
  nameWithType: AtomicPatterns.ValueItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem()
  type: Method
  source:
    id: ValueItem
    path: ''
    startLine: 5560
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern ValueItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function ValueItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem
  id: SmallValueItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SmallValueItem()
  nameWithType: AtomicPatterns.SmallValueItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem()
  type: Method
  source:
    id: SmallValueItem
    path: ''
    startLine: 5563
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SmallValueItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SmallValueItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem
  id: PointPPItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: PointPPItem()
  nameWithType: AtomicPatterns.PointPPItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem()
  type: Method
  source:
    id: PointPPItem
    path: ''
    startLine: 5566
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern PointPPItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function PointPPItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem
  id: GemItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: GemItem()
  nameWithType: AtomicPatterns.GemItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem()
  type: Method
  source:
    id: GemItem
    path: ''
    startLine: 5569
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern GemItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function GemItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem
  id: OneUpItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: OneUpItem()
  nameWithType: AtomicPatterns.OneUpItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem()
  type: Method
  source:
    id: OneUpItem
    path: ''
    startLine: 5572
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern OneUpItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function OneUpItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem
  id: PowerupShiftItem
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: PowerupShiftItem()
  nameWithType: AtomicPatterns.PowerupShiftItem()
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem()
  type: Method
  source:
    id: PowerupShiftItem
    path: ''
    startLine: 5576
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern PowerupShiftItem()
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function PowerupShiftItem As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.S(VTP)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.S(VTP)
  id: S(VTP)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: S(VTP)
  nameWithType: AtomicPatterns.S(VTP)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.S(VTP)
  type: Method
  source:
    id: S
    path: ''
    startLine: 5588
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nFires a simple bullet.\n"
  example: []
  syntax:
    content: public static SyncPattern S(VTP path)
    parameters:
    - id: path
      type: VTP
      description: Movement descriptor
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function S(path As VTP) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.S*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Simple(VTP,SBOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Simple(VTP,SBOptions)
  id: Simple(VTP,SBOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Simple(VTP, SBOptions)
  nameWithType: AtomicPatterns.Simple(VTP, SBOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Simple(VTP, SBOptions)
  type: Method
  source:
    id: Simple
    path: ''
    startLine: 5598
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nFires a simple bullet. Takes an array of simple bullet options as modifiers.\nSee <see cref=\"!:SBOption\"></see>\n"
  example: []
  syntax:
    content: public static SyncPattern Simple(VTP path, SBOptions options)
    parameters:
    - id: path
      type: VTP
      description: ''
    - id: options
      type: SBOptions
      description: ''
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function Simple(path As VTP, options As SBOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Simple*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Complex(VTP,BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Complex(VTP,BehOptions)
  id: Complex(VTP,BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Complex(VTP, BehOptions)
  nameWithType: AtomicPatterns.Complex(VTP, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Complex(VTP, BehOptions)
  type: Method
  source:
    id: Complex
    path: ''
    startLine: 5615
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nFires a complex bullet (ie. controlled by a GameObject).\nDo not use for pathers/lasers (use the Pather or Laser functions).\n"
  example: []
  syntax:
    content: public static SyncPattern Complex(VTP path, BehOptions options)
    parameters:
    - id: path
      type: VTP
      description: Movement descriptor
    - id: options
      type: BehOptions
      description: Bullet constructor options
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function Complex(path As VTP, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Complex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Pather(System.Single,BPY,VTP,BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Pather(System.Single,BPY,VTP,BehOptions)
  id: Pather(System.Single,BPY,VTP,BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Pather(Single, BPY, VTP, BehOptions)
  nameWithType: AtomicPatterns.Pather(Single, BPY, VTP, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Pather(System.Single, BPY, VTP, BehOptions)
  type: Method
  source:
    id: Pather
    path: ''
    startLine: 5628
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nFires a Pather/Tracker projectile, which &quot;remembers&quot; the points it has gone through and draws a path through them.\n"
  example: []
  syntax:
    content: public static SyncPattern Pather(float maxTime, BPY remember, VTP path, BehOptions options)
    parameters:
    - id: maxTime
      type: System.Single
      description: Maximum remember time. Only enough space to handle this much time will be allocated.
    - id: remember
      type: BPY
      description: The current remember time as a function of the current life-time
    - id: path
      type: VTP
      description: Movement descriptor
    - id: options
      type: BehOptions
      description: Bullet constructor options
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function Pather(maxTime As Single, remember As BPY, path As VTP, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Pather*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser(VTP,GCXF{System.Single},GCXF{System.Single},LaserOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Laser(VTP,GCXF{System.Single},GCXF{System.Single},LaserOptions)
  id: Laser(VTP,GCXF{System.Single},GCXF{System.Single},LaserOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Laser(VTP, GCXF<Single>, GCXF<Single>, LaserOptions)
  nameWithType: AtomicPatterns.Laser(VTP, GCXF<Single>, GCXF<Single>, LaserOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser(VTP, GCXF<System.Single>, GCXF<System.Single>, LaserOptions)
  type: Method
  source:
    id: Laser
    path: ''
    startLine: 5641
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nCreate a laser.\n"
  example: []
  syntax:
    content: public static SyncPattern Laser(VTP path, GCXF<float> cold, GCXF<float> hot, LaserOptions options)
    parameters:
    - id: path
      type: VTP
      description: Movement path for the base point of the laser
    - id: cold
      type: GCXF{System.Single}
      description: Time that the laser is in a non-damaging state
    - id: hot
      type: GCXF{System.Single}
      description: Time that the laser is in a damaging state
    - id: options
      type: LaserOptions
      description: Laser constructor options
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: Public Shared Function Laser(path As VTP, cold As GCXF(Of Single), hot As GCXF(Of Single), options As LaserOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser*
  nameWithType.vb: AtomicPatterns.Laser(VTP, GCXF(Of Single), GCXF(Of Single), LaserOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser(VTP, GCXF(Of System.Single), GCXF(Of System.Single), LaserOptions)
  name.vb: Laser(VTP, GCXF(Of Single), GCXF(Of Single), LaserOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser(GCXF{System.Single},LaserOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser(GCXF{System.Single},LaserOptions)
  id: SafeLaser(GCXF{System.Single},LaserOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SafeLaser(GCXF<Single>, LaserOptions)
  nameWithType: AtomicPatterns.SafeLaser(GCXF<Single>, LaserOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser(GCXF<System.Single>, LaserOptions)
  type: Method
  source:
    id: SafeLaser
    path: ''
    startLine: 5646
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SafeLaser(GCXF<float> cold, LaserOptions options)
    parameters:
    - id: cold
      type: GCXF{System.Single}
    - id: options
      type: LaserOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SafeLaser(cold As GCXF(Of Single), options As LaserOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser*
  nameWithType.vb: AtomicPatterns.SafeLaser(GCXF(Of Single), LaserOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser(GCXF(Of System.Single), LaserOptions)
  name.vb: SafeLaser(GCXF(Of Single), LaserOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM(VTP,GCXF{System.Single},LaserOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM(VTP,GCXF{System.Single},LaserOptions)
  id: SafeLaserM(VTP,GCXF{System.Single},LaserOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SafeLaserM(VTP, GCXF<Single>, LaserOptions)
  nameWithType: AtomicPatterns.SafeLaserM(VTP, GCXF<Single>, LaserOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM(VTP, GCXF<System.Single>, LaserOptions)
  type: Method
  source:
    id: SafeLaserM
    path: ''
    startLine: 5649
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SafeLaserM(VTP path, GCXF<float> cold, LaserOptions options)
    parameters:
    - id: path
      type: VTP
    - id: cold
      type: GCXF{System.Single}
    - id: options
      type: LaserOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SafeLaserM(path As VTP, cold As GCXF(Of Single), options As LaserOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM*
  nameWithType.vb: AtomicPatterns.SafeLaserM(VTP, GCXF(Of Single), LaserOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM(VTP, GCXF(Of System.Single), LaserOptions)
  name.vb: SafeLaserM(VTP, GCXF(Of Single), LaserOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS(VTP,System.Nullable{StateMachine})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS(VTP,System.Nullable{StateMachine})
  id: SummonS(VTP,System.Nullable{StateMachine})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonS(VTP, Nullable<StateMachine>)
  nameWithType: AtomicPatterns.SummonS(VTP, Nullable<StateMachine>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS(VTP, System.Nullable<StateMachine>)
  type: Method
  source:
    id: SummonS
    path: ''
    startLine: 5652
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonS(VTP path, StateMachine? sm)
    parameters:
    - id: path
      type: VTP
    - id: sm
      type: System.Nullable{StateMachine}
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonS(path As VTP, sm As StateMachine?) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS*
  nameWithType.vb: AtomicPatterns.SummonS(VTP, Nullable(Of StateMachine))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS(VTP, System.Nullable(Of StateMachine))
  name.vb: SummonS(VTP, Nullable(Of StateMachine))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP(VTP,System.Nullable{StateMachine})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP(VTP,System.Nullable{StateMachine})
  id: SummonSUP(VTP,System.Nullable{StateMachine})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonSUP(VTP, Nullable<StateMachine>)
  nameWithType: AtomicPatterns.SummonSUP(VTP, Nullable<StateMachine>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP(VTP, System.Nullable<StateMachine>)
  type: Method
  source:
    id: SummonSUP
    path: ''
    startLine: 5654
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonSUP(VTP path, StateMachine? sm)
    parameters:
    - id: path
      type: VTP
    - id: sm
      type: System.Nullable{StateMachine}
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonSUP(path As VTP, sm As StateMachine?) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP*
  nameWithType.vb: AtomicPatterns.SummonSUP(VTP, Nullable(Of StateMachine))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP(VTP, System.Nullable(Of StateMachine))
  name.vb: SummonSUP(VTP, Nullable(Of StateMachine))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode(VTP,System.Nullable{StateMachine})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Inode(VTP,System.Nullable{StateMachine})
  id: Inode(VTP,System.Nullable{StateMachine})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Inode(VTP, Nullable<StateMachine>)
  nameWithType: AtomicPatterns.Inode(VTP, Nullable<StateMachine>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode(VTP, System.Nullable<StateMachine>)
  type: Method
  source:
    id: Inode
    path: ''
    startLine: 5656
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Inode(VTP path, StateMachine? sm)
    parameters:
    - id: path
      type: VTP
    - id: sm
      type: System.Nullable{StateMachine}
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Inode(path As VTP, sm As StateMachine?) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode*
  nameWithType.vb: AtomicPatterns.Inode(VTP, Nullable(Of StateMachine))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode(VTP, System.Nullable(Of StateMachine))
  name.vb: Inode(VTP, Nullable(Of StateMachine))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon(VTP,System.Nullable{StateMachine},BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Summon(VTP,System.Nullable{StateMachine},BehOptions)
  id: Summon(VTP,System.Nullable{StateMachine},BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Summon(VTP, Nullable<StateMachine>, BehOptions)
  nameWithType: AtomicPatterns.Summon(VTP, Nullable<StateMachine>, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon(VTP, System.Nullable<StateMachine>, BehOptions)
  type: Method
  source:
    id: Summon
    path: ''
    startLine: 5670
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Summon(VTP path, StateMachine? sm, BehOptions options)
    parameters:
    - id: path
      type: VTP
    - id: sm
      type: System.Nullable{StateMachine}
    - id: options
      type: BehOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Summon(path As VTP, sm As StateMachine?, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon*
  nameWithType.vb: AtomicPatterns.Summon(VTP, Nullable(Of StateMachine), BehOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon(VTP, System.Nullable(Of StateMachine), BehOptions)
  name.vb: Summon(VTP, Nullable(Of StateMachine), BehOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP(VTP,System.Nullable{StateMachine},BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP(VTP,System.Nullable{StateMachine},BehOptions)
  id: SummonUP(VTP,System.Nullable{StateMachine},BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonUP(VTP, Nullable<StateMachine>, BehOptions)
  nameWithType: AtomicPatterns.SummonUP(VTP, Nullable<StateMachine>, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP(VTP, System.Nullable<StateMachine>, BehOptions)
  type: Method
  source:
    id: SummonUP
    path: ''
    startLine: 5673
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonUP(VTP path, StateMachine? sm, BehOptions options)
    parameters:
    - id: path
      type: VTP
    - id: sm
      type: System.Nullable{StateMachine}
    - id: options
      type: BehOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonUP(path As VTP, sm As StateMachine?, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP*
  nameWithType.vb: AtomicPatterns.SummonUP(VTP, Nullable(Of StateMachine), BehOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP(VTP, System.Nullable(Of StateMachine), BehOptions)
  name.vb: SummonUP(VTP, Nullable(Of StateMachine), BehOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR(RootedVTP,System.Nullable{StateMachine},BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR(RootedVTP,System.Nullable{StateMachine},BehOptions)
  id: SummonR(RootedVTP,System.Nullable{StateMachine},BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonR(RootedVTP, Nullable<StateMachine>, BehOptions)
  nameWithType: AtomicPatterns.SummonR(RootedVTP, Nullable<StateMachine>, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR(RootedVTP, System.Nullable<StateMachine>, BehOptions)
  type: Method
  source:
    id: SummonR
    path: ''
    startLine: 5676
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonR(RootedVTP path, StateMachine? sm, BehOptions options)
    parameters:
    - id: path
      type: RootedVTP
    - id: sm
      type: System.Nullable{StateMachine}
    - id: options
      type: BehOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonR(path As RootedVTP, sm As StateMachine?, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR*
  nameWithType.vb: AtomicPatterns.SummonR(RootedVTP, Nullable(Of StateMachine), BehOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR(RootedVTP, System.Nullable(Of StateMachine), BehOptions)
  name.vb: SummonR(RootedVTP, Nullable(Of StateMachine), BehOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP(RootedVTP,System.Nullable{StateMachine},BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP(RootedVTP,System.Nullable{StateMachine},BehOptions)
  id: SummonRUP(RootedVTP,System.Nullable{StateMachine},BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonRUP(RootedVTP, Nullable<StateMachine>, BehOptions)
  nameWithType: AtomicPatterns.SummonRUP(RootedVTP, Nullable<StateMachine>, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP(RootedVTP, System.Nullable<StateMachine>, BehOptions)
  type: Method
  source:
    id: SummonRUP
    path: ''
    startLine: 5681
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonRUP(RootedVTP path, StateMachine? sm, BehOptions options)
    parameters:
    - id: path
      type: RootedVTP
    - id: sm
      type: System.Nullable{StateMachine}
    - id: options
      type: BehOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonRUP(path As RootedVTP, sm As StateMachine?, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP*
  nameWithType.vb: AtomicPatterns.SummonRUP(RootedVTP, Nullable(Of StateMachine), BehOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP(RootedVTP, System.Nullable(Of StateMachine), BehOptions)
  name.vb: SummonRUP(RootedVTP, Nullable(Of StateMachine), BehOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ(System.Nullable{StateMachine},BehOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ(System.Nullable{StateMachine},BehOptions)
  id: SummonRZ(System.Nullable{StateMachine},BehOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: SummonRZ(Nullable<StateMachine>, BehOptions)
  nameWithType: AtomicPatterns.SummonRZ(Nullable<StateMachine>, BehOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ(System.Nullable<StateMachine>, BehOptions)
  type: Method
  source:
    id: SummonRZ
    path: ''
    startLine: 5686
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern SummonRZ(StateMachine? sm, BehOptions options)
    parameters:
    - id: sm
      type: System.Nullable{StateMachine}
    - id: options
      type: BehOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function SummonRZ(sm As StateMachine?, options As BehOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ*
  nameWithType.vb: AtomicPatterns.SummonRZ(Nullable(Of StateMachine), BehOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ(System.Nullable(Of StateMachine), BehOptions)
  name.vb: SummonRZ(Nullable(Of StateMachine), BehOptions)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Circ(TP4,BPRV2)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Circ(TP4,BPRV2)
  id: Circ(TP4,BPRV2)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Circ(TP4, BPRV2)
  nameWithType: AtomicPatterns.Circ(TP4, BPRV2)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Circ(TP4, BPRV2)
  type: Method
  source:
    id: Circ
    path: ''
    startLine: 5704
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Circ(TP4 color, BPRV2 locScaleAngle)
    parameters:
    - id: color
      type: TP4
    - id: locScaleAngle
      type: BPRV2
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Circ(color As TP4, locScaleAngle As BPRV2) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Circ*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc(System.String,TP,BPRV2,TP4)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc(System.String,TP,BPRV2,TP4)
  id: gRelCirc(System.String,TP,BPRV2,TP4)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: gRelCirc(String, TP, BPRV2, TP4)
  nameWithType: AtomicPatterns.gRelCirc(String, TP, BPRV2, TP4)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc(System.String, TP, BPRV2, TP4)
  type: Method
  source:
    id: gRelCirc
    path: ''
    startLine: 5708
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern gRelCirc(string behId, TP loc, BPRV2 locScaleAngle, TP4 color)
    parameters:
    - id: behId
      type: System.String
    - id: loc
      type: TP
    - id: locScaleAngle
      type: BPRV2
    - id: color
      type: TP4
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function gRelCirc(behId As String, loc As TP, locScaleAngle As BPRV2, color As TP4) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  id: RelCirc(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: RelCirc(String, Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  nameWithType: AtomicPatterns.RelCirc(String, Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc(System.String, System.Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  type: Method
  source:
    id: RelCirc
    path: ''
    startLine: 5713
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern RelCirc(string behId, Func<TExArgCtx, TEx<BehaviorEntity>> beh, BPRV2 locScaleAngle, TP4 color)
    parameters:
    - id: behId
      type: System.String
    - id: beh
      type: System.Func{TExArgCtx,TEx{BehaviorEntity}}
    - id: locScaleAngle
      type: BPRV2
    - id: color
      type: TP4
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function RelCirc(behId As String, beh As Func(Of TExArgCtx, TEx(Of BehaviorEntity)), locScaleAngle As BPRV2, color As TP4) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc*
  nameWithType.vb: AtomicPatterns.RelCirc(String, Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc(System.String, System.Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
  name.vb: RelCirc(String, Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Rect(TP4,BPRV2)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Rect(TP4,BPRV2)
  id: Rect(TP4,BPRV2)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Rect(TP4, BPRV2)
  nameWithType: AtomicPatterns.Rect(TP4, BPRV2)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Rect(TP4, BPRV2)
  type: Method
  source:
    id: Rect
    path: ''
    startLine: 5715
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Rect(TP4 color, BPRV2 locScaleAngle)
    parameters:
    - id: color
      type: TP4
    - id: locScaleAngle
      type: BPRV2
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Rect(color As TP4, locScaleAngle As BPRV2) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Rect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect(System.String,TP,BPRV2,TP4)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect(System.String,TP,BPRV2,TP4)
  id: gRelRect(System.String,TP,BPRV2,TP4)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: gRelRect(String, TP, BPRV2, TP4)
  nameWithType: AtomicPatterns.gRelRect(String, TP, BPRV2, TP4)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect(System.String, TP, BPRV2, TP4)
  type: Method
  source:
    id: gRelRect
    path: ''
    startLine: 5719
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern gRelRect(string behId, TP loc, BPRV2 locScaleAngle, TP4 color)
    parameters:
    - id: behId
      type: System.String
    - id: loc
      type: TP
    - id: locScaleAngle
      type: BPRV2
    - id: color
      type: TP4
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function gRelRect(behId As String, loc As TP, locScaleAngle As BPRV2, color As TP4) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  id: RelRect(System.String,System.Func{TExArgCtx,TEx{BehaviorEntity}},BPRV2,TP4)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: RelRect(String, Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  nameWithType: AtomicPatterns.RelRect(String, Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect(System.String, System.Func<TExArgCtx, TEx<BehaviorEntity>>, BPRV2, TP4)
  type: Method
  source:
    id: RelRect
    path: ''
    startLine: 5724
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern RelRect(string behId, Func<TExArgCtx, TEx<BehaviorEntity>> beh, BPRV2 locScaleAngle, TP4 color)
    parameters:
    - id: behId
      type: System.String
    - id: beh
      type: System.Func{TExArgCtx,TEx{BehaviorEntity}}
    - id: locScaleAngle
      type: BPRV2
    - id: color
      type: TP4
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function RelRect(behId As String, beh As Func(Of TExArgCtx, TEx(Of BehaviorEntity)), locScaleAngle As BPRV2, color As TP4) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect*
  nameWithType.vb: AtomicPatterns.RelRect(String, Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect(System.String, System.Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
  name.vb: RelRect(String, Func(Of TExArgCtx, TEx(Of BehaviorEntity)), BPRV2, TP4)
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness(TP,BPY,TP4)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness(TP,BPY,TP4)
  id: Darkness(TP,BPY,TP4)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Darkness(TP, BPY, TP4)
  nameWithType: AtomicPatterns.Darkness(TP, BPY, TP4)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness(TP, BPY, TP4)
  type: Method
  source:
    id: Darkness
    path: ''
    startLine: 5728
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern Darkness(TP loc, BPY radius, TP4 color)
    parameters:
    - id: loc
      type: TP
    - id: radius
      type: BPY
    - id: color
      type: TP4
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function Darkness(loc As TP, radius As BPY, color As TP4) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura(PowerAuraOptions)
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura(PowerAuraOptions)
  id: PowerAura(PowerAuraOptions)
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: PowerAura(PowerAuraOptions)
  nameWithType: AtomicPatterns.PowerAura(PowerAuraOptions)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura(PowerAuraOptions)
  type: Method
  source:
    id: PowerAura
    path: ''
    startLine: 5733
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public static SyncPattern PowerAura(PowerAuraOptions options)
    parameters:
    - id: options
      type: PowerAuraOptions
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
    content.vb: Public Shared Function PowerAura(options As PowerAuraOptions) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  id: Powerup(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: Powerup(String, TP4, GCXF<Single>, GCXF<Single>)
  nameWithType: AtomicPatterns.Powerup(String, TP4, GCXF<Single>, GCXF<Single>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup(System.String, TP4, GCXF<System.Single>, GCXF<System.Single>)
  type: Method
  source:
    id: Powerup
    path: ''
    startLine: 5746
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\n\nCreate a powerup effect.\nThese effects are parented directly under the BEH they are attached to. Offsets, etc do not apply. \n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use PowerAura instead.")]

      public static SyncPattern Powerup(string sfx, TP4 color, GCXF<float> time, GCXF<float> itrs)
    parameters:
    - id: sfx
      type: System.String
      description: Sound effect to play when the powerup starts
    - id: color
      type: TP4
      description: Color multiplier function
    - id: time
      type: GCXF{System.Single}
      description: Time the powerup exists
    - id: itrs
      type: GCXF{System.Single}
      description: Number of cycles the powerup goes through
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: >-
      <Obsolete("Use PowerAura instead.")>

      Public Shared Function Powerup(sfx As String, color As TP4, time As GCXF(Of Single), itrs As GCXF(Of Single)) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use PowerAura instead.
  nameWithType.vb: AtomicPatterns.Powerup(String, TP4, GCXF(Of Single), GCXF(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup(System.String, TP4, GCXF(Of System.Single), GCXF(Of System.Single))
  name.vb: Powerup(String, TP4, GCXF(Of Single), GCXF(Of Single))
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  commentId: M:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  id: PowerupStatic(System.String,TP4,GCXF{System.Single},GCXF{System.Single})
  parent: Danmokou.Danmaku.Patterns.AtomicPatterns
  langs:
  - csharp
  - vb
  name: PowerupStatic(String, TP4, GCXF<Single>, GCXF<Single>)
  nameWithType: AtomicPatterns.PowerupStatic(String, TP4, GCXF<Single>, GCXF<Single>)
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic(System.String, TP4, GCXF<System.Single>, GCXF<System.Single>)
  type: Method
  source:
    id: PowerupStatic
    path: ''
    startLine: 5766
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nCreate a powerup effect, using the V2RV2 offset to position.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use PowerAura instead.")]

      public static SyncPattern PowerupStatic(string sfx, TP4 color, GCXF<float> time, GCXF<float> itrs)
    parameters:
    - id: sfx
      type: System.String
      description: Sound effect to play when the powerup starts
    - id: color
      type: TP4
      description: Color multiplier function
    - id: time
      type: GCXF{System.Single}
      description: Time the powerup exists
    - id: itrs
      type: GCXF{System.Single}
      description: Number of cycles the powerup goes through
    return:
      type: Danmokou.Danmaku.Patterns.SyncPattern
      description: ''
    content.vb: >-
      <Obsolete("Use PowerAura instead.")>

      Public Shared Function PowerupStatic(sfx As String, color As TP4, time As GCXF(Of Single), itrs As GCXF(Of Single)) As SyncPattern
  overload: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use PowerAura instead.
  nameWithType.vb: AtomicPatterns.PowerupStatic(String, TP4, GCXF(Of Single), GCXF(Of Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic(System.String, TP4, GCXF(Of System.Single), GCXF(Of System.Single))
  name.vb: PowerupStatic(String, TP4, GCXF(Of Single), GCXF(Of Single))
references:
- uid: Danmokou.Danmaku.Patterns
  commentId: N:Danmokou.Danmaku.Patterns
  name: Danmokou.Danmaku.Patterns
  nameWithType: Danmokou.Danmaku.Patterns
  fullName: Danmokou.Danmaku.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.DS*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.DS
  name: DS
  nameWithType: AtomicPatterns.DS
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.DS
- uid: ReflectEx.Hoist{Vector2}
  commentId: '!:ReflectEx.Hoist{Vector2}'
  definition: ReflectEx.Hoist`1
  name: ReflectEx.Hoist<Vector2>
  nameWithType: ReflectEx.Hoist<Vector2>
  fullName: ReflectEx.Hoist<Vector2>
  nameWithType.vb: ReflectEx.Hoist(Of Vector2)
  fullName.vb: ReflectEx.Hoist(Of Vector2)
  name.vb: ReflectEx.Hoist(Of Vector2)
  spec.csharp:
  - uid: ReflectEx.Hoist`1
    name: ReflectEx.Hoist
    nameWithType: ReflectEx.Hoist
    fullName: ReflectEx.Hoist
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReflectEx.Hoist`1
    name: ReflectEx.Hoist
    nameWithType: ReflectEx.Hoist
    fullName: ReflectEx.Hoist
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ExBPY
  isExternal: true
  name: ExBPY
  nameWithType: ExBPY
  fullName: ExBPY
- uid: ExTP
  isExternal: true
  name: ExTP
  nameWithType: ExTP
  fullName: ExTP
- uid: Danmokou.Danmaku.Patterns.SyncPattern
  commentId: T:Danmokou.Danmaku.Patterns.SyncPattern
  parent: Danmokou.Danmaku.Patterns
  name: SyncPattern
  nameWithType: SyncPattern
  fullName: Danmokou.Danmaku.Patterns.SyncPattern
- uid: ReflectEx.Hoist`1
  isExternal: true
  name: ReflectEx.Hoist<>
  nameWithType: ReflectEx.Hoist<>
  fullName: ReflectEx.Hoist<>
  nameWithType.vb: ReflectEx.Hoist(Of )
  fullName.vb: ReflectEx.Hoist(Of )
  name.vb: ReflectEx.Hoist(Of )
  spec.csharp:
  - uid: ReflectEx.Hoist`1
    name: ReflectEx.Hoist
    nameWithType: ReflectEx.Hoist
    fullName: ReflectEx.Hoist
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ReflectEx.Hoist`1
    name: ReflectEx.Hoist
    nameWithType: ReflectEx.Hoist
    fullName: ReflectEx.Hoist
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.dPather*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.dPather
  name: dPather
  nameWithType: AtomicPatterns.dPather
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.dPather
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Erase
  name: Erase
  nameWithType: AtomicPatterns.Erase
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Erase
- uid: GCXF{{T}}
  commentId: '!:GCXF{``0}'
  definition: GCXF`1
  name: GCXF<T>
  nameWithType: GCXF<T>
  fullName: GCXF<T>
  nameWithType.vb: GCXF(Of T)
  fullName.vb: GCXF(Of T)
  name.vb: GCXF(Of T)
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: GCXF`1
  isExternal: true
  name: GCXF<>
  nameWithType: GCXF<>
  fullName: GCXF<>
  nameWithType.vb: GCXF(Of )
  fullName.vb: GCXF(Of )
  name.vb: GCXF(Of )
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Noop*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Noop
  name: Noop
  nameWithType: AtomicPatterns.Noop
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Noop
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SFX*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SFX
  name: SFX
  nameWithType: AtomicPatterns.SFX
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SFX
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Event*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Event
  name: Event
  nameWithType: AtomicPatterns.Event
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Event
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Event0*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Event0
  name: Event0
  nameWithType: AtomicPatterns.Event0
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Event0
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem
  name: LifeItem
  nameWithType: AtomicPatterns.LifeItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.LifeItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem
  name: ValueItem
  nameWithType: AtomicPatterns.ValueItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.ValueItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem
  name: SmallValueItem
  nameWithType: AtomicPatterns.SmallValueItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SmallValueItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem
  name: PointPPItem
  nameWithType: AtomicPatterns.PointPPItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PointPPItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem
  name: GemItem
  nameWithType: AtomicPatterns.GemItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.GemItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem
  name: OneUpItem
  nameWithType: AtomicPatterns.OneUpItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.OneUpItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem
  name: PowerupShiftItem
  nameWithType: AtomicPatterns.PowerupShiftItem
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupShiftItem
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.S*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.S
  name: S
  nameWithType: AtomicPatterns.S
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.S
- uid: VTP
  isExternal: true
  name: VTP
  nameWithType: VTP
  fullName: VTP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Simple*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Simple
  name: Simple
  nameWithType: AtomicPatterns.Simple
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Simple
- uid: SBOptions
  commentId: '!:SBOptions'
  isExternal: true
  name: SBOptions
  nameWithType: SBOptions
  fullName: SBOptions
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Complex*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Complex
  name: Complex
  nameWithType: AtomicPatterns.Complex
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Complex
- uid: BehOptions
  isExternal: true
  name: BehOptions
  nameWithType: BehOptions
  fullName: BehOptions
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Pather*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Pather
  name: Pather
  nameWithType: AtomicPatterns.Pather
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Pather
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: BPY
  isExternal: true
  name: BPY
  nameWithType: BPY
  fullName: BPY
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Laser
  name: Laser
  nameWithType: AtomicPatterns.Laser
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Laser
- uid: GCXF{System.Single}
  commentId: '!:GCXF{System.Single}'
  definition: GCXF`1
  name: GCXF<Single>
  nameWithType: GCXF<Single>
  fullName: GCXF<System.Single>
  nameWithType.vb: GCXF(Of Single)
  fullName.vb: GCXF(Of System.Single)
  name.vb: GCXF(Of Single)
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: LaserOptions
  isExternal: true
  name: LaserOptions
  nameWithType: LaserOptions
  fullName: LaserOptions
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser
  name: SafeLaser
  nameWithType: AtomicPatterns.SafeLaser
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaser
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM
  name: SafeLaserM
  nameWithType: AtomicPatterns.SafeLaserM
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SafeLaserM
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS
  name: SummonS
  nameWithType: AtomicPatterns.SummonS
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonS
- uid: System.Nullable{StateMachine}
  commentId: T:System.Nullable{StateMachine}
  parent: System
  definition: System.Nullable`1
  name: Nullable<StateMachine>
  nameWithType: Nullable<StateMachine>
  fullName: System.Nullable<StateMachine>
  nameWithType.vb: Nullable(Of StateMachine)
  fullName.vb: System.Nullable(Of StateMachine)
  name.vb: Nullable(Of StateMachine)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: StateMachine
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: StateMachine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP
  name: SummonSUP
  nameWithType: AtomicPatterns.SummonSUP
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonSUP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Inode
  name: Inode
  nameWithType: AtomicPatterns.Inode
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Inode
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Summon
  name: Summon
  nameWithType: AtomicPatterns.Summon
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Summon
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP
  name: SummonUP
  nameWithType: AtomicPatterns.SummonUP
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonUP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR
  name: SummonR
  nameWithType: AtomicPatterns.SummonR
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonR
- uid: RootedVTP
  isExternal: true
  name: RootedVTP
  nameWithType: RootedVTP
  fullName: RootedVTP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP
  name: SummonRUP
  nameWithType: AtomicPatterns.SummonRUP
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRUP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ
  name: SummonRZ
  nameWithType: AtomicPatterns.SummonRZ
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.SummonRZ
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Circ*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Circ
  name: Circ
  nameWithType: AtomicPatterns.Circ
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Circ
- uid: TP4
  isExternal: true
  name: TP4
  nameWithType: TP4
  fullName: TP4
- uid: BPRV2
  isExternal: true
  name: BPRV2
  nameWithType: BPRV2
  fullName: BPRV2
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc
  name: gRelCirc
  nameWithType: AtomicPatterns.gRelCirc
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelCirc
- uid: TP
  isExternal: true
  name: TP
  nameWithType: TP
  fullName: TP
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc
  name: RelCirc
  nameWithType: AtomicPatterns.RelCirc
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.RelCirc
- uid: System.Func{TExArgCtx,TEx{BehaviorEntity}}
  commentId: T:System.Func{TExArgCtx,TEx{BehaviorEntity}}
  parent: System
  definition: System.Func`2
  name: Func<TExArgCtx, TEx<BehaviorEntity>>
  nameWithType: Func<TExArgCtx, TEx<BehaviorEntity>>
  fullName: System.Func<TExArgCtx, TEx<BehaviorEntity>>
  nameWithType.vb: Func(Of TExArgCtx, TEx(Of BehaviorEntity))
  fullName.vb: System.Func(Of TExArgCtx, TEx(Of BehaviorEntity))
  name.vb: Func(Of TExArgCtx, TEx(Of BehaviorEntity))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TExArgCtx
    name: TExArgCtx
    nameWithType: TExArgCtx
    fullName: TExArgCtx
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TEx`1
    name: TEx
    nameWithType: TEx
    fullName: TEx
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BehaviorEntity
    name: BehaviorEntity
    nameWithType: BehaviorEntity
    fullName: BehaviorEntity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TExArgCtx
    name: TExArgCtx
    nameWithType: TExArgCtx
    fullName: TExArgCtx
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: TEx`1
    name: TEx
    nameWithType: TEx
    fullName: TEx
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BehaviorEntity
    name: BehaviorEntity
    nameWithType: BehaviorEntity
    fullName: BehaviorEntity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Rect*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Rect
  name: Rect
  nameWithType: AtomicPatterns.Rect
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Rect
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect
  name: gRelRect
  nameWithType: AtomicPatterns.gRelRect
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.gRelRect
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect
  name: RelRect
  nameWithType: AtomicPatterns.RelRect
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.RelRect
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness
  name: Darkness
  nameWithType: AtomicPatterns.Darkness
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Darkness
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura
  name: PowerAura
  nameWithType: AtomicPatterns.PowerAura
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerAura
- uid: PowerAuraOptions
  commentId: '!:PowerAuraOptions'
  isExternal: true
  name: PowerAuraOptions
  nameWithType: PowerAuraOptions
  fullName: PowerAuraOptions
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup
  name: Powerup
  nameWithType: AtomicPatterns.Powerup
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.Powerup
- uid: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic*
  commentId: Overload:Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic
  name: PowerupStatic
  nameWithType: AtomicPatterns.PowerupStatic
  fullName: Danmokou.Danmaku.Patterns.AtomicPatterns.PowerupStatic
