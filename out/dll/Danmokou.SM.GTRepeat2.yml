### YamlMime:ManagedReference
items:
- uid: Danmokou.SM.GTRepeat2
  commentId: T:Danmokou.SM.GTRepeat2
  id: GTRepeat2
  parent: Danmokou.SM
  children:
  - Danmokou.SM.GTRepeat2.#ctor(GCXF{System.Single},GCXF{System.Single},GCXF{V2RV2},GenCtxProperty[],Danmokou.SM.StateMachine[])
  langs:
  - csharp
  - vb
  name: GTRepeat2
  nameWithType: GTRepeat2
  fullName: Danmokou.SM.GTRepeat2
  type: Class
  source:
    id: GTRepeat2
    path: ''
    startLine: 12729
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  summary: "\n`gtr2`: Like GTRepeat, but has specific handling for the WAIT, TIMES, and rpp properties.\n"
  example: []
  syntax:
    content: 'public class GTRepeat2 : GTRepeat'
    content.vb: >-
      Public Class GTRepeat2
          Inherits GTRepeat
  inheritance:
  - System.Object
  - Danmokou.SM.StateMachine
  - Danmokou.SM.UniversalSM
  - Danmokou.SM.GTRepeat
  inheritedMembers:
  - Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Danmokou.SM.GTRepeat2.#ctor(GCXF{System.Single},GCXF{System.Single},GCXF{V2RV2},GenCtxProperty[],Danmokou.SM.StateMachine[])
  commentId: M:Danmokou.SM.GTRepeat2.#ctor(GCXF{System.Single},GCXF{System.Single},GCXF{V2RV2},GenCtxProperty[],Danmokou.SM.StateMachine[])
  id: '#ctor(GCXF{System.Single},GCXF{System.Single},GCXF{V2RV2},GenCtxProperty[],Danmokou.SM.StateMachine[])'
  parent: Danmokou.SM.GTRepeat2
  langs:
  - csharp
  - vb
  name: GTRepeat2(GCXF<Single>, GCXF<Single>, GCXF<V2RV2>, GenCtxProperty[], StateMachine[])
  nameWithType: GTRepeat2.GTRepeat2(GCXF<Single>, GCXF<Single>, GCXF<V2RV2>, GenCtxProperty[], StateMachine[])
  fullName: Danmokou.SM.GTRepeat2.GTRepeat2(GCXF<System.Single>, GCXF<System.Single>, GCXF<V2RV2>, GenCtxProperty[], Danmokou.SM.StateMachine[])
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 12735
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  example: []
  syntax:
    content: public GTRepeat2(GCXF<float> wait, GCXF<float> times, GCXF<V2RV2> rpp, GenCtxProperty[] props, StateMachine[] target)
    parameters:
    - id: wait
      type: GCXF{System.Single}
      description: Frames to wait between invocations
    - id: times
      type: GCXF{System.Single}
      description: Number of invocations
    - id: rpp
      type: GCXF{V2RV2}
      description: Amount to increment rv2 between invocations
    - id: props
      type: GenCtxProperty[]
      description: Other properties
    - id: target
      type: Danmokou.SM.StateMachine[]
      description: Child StateMachines to run
    content.vb: Public Sub New(wait As GCXF(Of Single), times As GCXF(Of Single), rpp As GCXF(Of V2RV2), props As GenCtxProperty(), target As StateMachine())
  overload: Danmokou.SM.GTRepeat2.#ctor*
  nameWithType.vb: GTRepeat2.GTRepeat2(GCXF(Of Single), GCXF(Of Single), GCXF(Of V2RV2), GenCtxProperty(), StateMachine())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Danmokou.SM.GTRepeat2.GTRepeat2(GCXF(Of System.Single), GCXF(Of System.Single), GCXF(Of V2RV2), GenCtxProperty(), Danmokou.SM.StateMachine())
  name.vb: GTRepeat2(GCXF(Of Single), GCXF(Of Single), GCXF(Of V2RV2), GenCtxProperty(), StateMachine())
references:
- uid: Danmokou.SM
  commentId: N:Danmokou.SM
  name: Danmokou.SM
  nameWithType: Danmokou.SM
  fullName: Danmokou.SM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Danmokou.SM.StateMachine
  commentId: T:Danmokou.SM.StateMachine
  parent: Danmokou.SM
  name: StateMachine
  nameWithType: StateMachine
  fullName: Danmokou.SM.StateMachine
- uid: Danmokou.SM.UniversalSM
  commentId: T:Danmokou.SM.UniversalSM
  parent: Danmokou.SM
  name: UniversalSM
  nameWithType: UniversalSM
  fullName: Danmokou.SM.UniversalSM
- uid: Danmokou.SM.GTRepeat
  commentId: T:Danmokou.SM.GTRepeat
  parent: Danmokou.SM
  name: GTRepeat
  nameWithType: GTRepeat
  fullName: Danmokou.SM.GTRepeat
- uid: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.GTRepeat
  name: Start(SMHandoff)
  nameWithType: GTRepeat.Start(SMHandoff)
  fullName: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
  spec.csharp:
  - uid: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: GTRepeat.Start
    fullName: Danmokou.SM.GTRepeat.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Danmokou.SM.GTRepeat.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: GTRepeat.Start
    fullName: Danmokou.SM.GTRepeat.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.SM.GTRepeat2.#ctor*
  commentId: Overload:Danmokou.SM.GTRepeat2.#ctor
  name: GTRepeat2
  nameWithType: GTRepeat2.GTRepeat2
  fullName: Danmokou.SM.GTRepeat2.GTRepeat2
- uid: GCXF{System.Single}
  commentId: '!:GCXF{System.Single}'
  definition: GCXF`1
  name: GCXF<Single>
  nameWithType: GCXF<Single>
  fullName: GCXF<System.Single>
  nameWithType.vb: GCXF(Of Single)
  fullName.vb: GCXF(Of System.Single)
  name.vb: GCXF(Of Single)
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GCXF{V2RV2}
  commentId: '!:GCXF{V2RV2}'
  definition: GCXF`1
  name: GCXF<V2RV2>
  nameWithType: GCXF<V2RV2>
  fullName: GCXF<V2RV2>
  nameWithType.vb: GCXF(Of V2RV2)
  fullName.vb: GCXF(Of V2RV2)
  name.vb: GCXF(Of V2RV2)
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: V2RV2
    name: V2RV2
    nameWithType: V2RV2
    fullName: V2RV2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: V2RV2
    name: V2RV2
    nameWithType: V2RV2
    fullName: V2RV2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GenCtxProperty[]
  isExternal: true
  name: GenCtxProperty[]
  nameWithType: GenCtxProperty[]
  fullName: GenCtxProperty[]
  nameWithType.vb: GenCtxProperty()
  fullName.vb: GenCtxProperty()
  name.vb: GenCtxProperty()
  spec.csharp:
  - uid: GenCtxProperty
    name: GenCtxProperty
    nameWithType: GenCtxProperty
    fullName: GenCtxProperty
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: GenCtxProperty
    name: GenCtxProperty
    nameWithType: GenCtxProperty
    fullName: GenCtxProperty
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Danmokou.SM.StateMachine[]
  isExternal: true
  name: StateMachine[]
  nameWithType: StateMachine[]
  fullName: Danmokou.SM.StateMachine[]
  nameWithType.vb: StateMachine()
  fullName.vb: Danmokou.SM.StateMachine()
  name.vb: StateMachine()
  spec.csharp:
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Danmokou.SM.StateMachine
    name: StateMachine
    nameWithType: StateMachine
    fullName: Danmokou.SM.StateMachine
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: GCXF`1
  isExternal: true
  name: GCXF<>
  nameWithType: GCXF<>
  fullName: GCXF<>
  nameWithType.vb: GCXF(Of )
  fullName.vb: GCXF(Of )
  name.vb: GCXF(Of )
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
