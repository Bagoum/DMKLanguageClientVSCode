### YamlMime:ManagedReference
items:
- uid: Danmokou.SM.ReflectableLASM
  commentId: T:Danmokou.SM.ReflectableLASM
  id: ReflectableLASM
  parent: Danmokou.SM
  children:
  - Danmokou.SM.ReflectableLASM.#ctor(Danmokou.SM.TaskPattern)
  - Danmokou.SM.ReflectableLASM.op_Implicit(Danmokou.SM.TaskPattern)~Danmokou.SM.ReflectableLASM
  - Danmokou.SM.ReflectableLASM.Start(Danmokou.SM.SMHandoff)
  langs:
  - csharp
  - vb
  name: ReflectableLASM
  nameWithType: ReflectableLASM
  fullName: Danmokou.SM.ReflectableLASM
  type: Class
  source:
    id: ReflectableLASM
    path: ''
    startLine: 14588
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: 'public class ReflectableLASM : LineActionSM'
    content.vb: >-
      Public Class ReflectableLASM
          Inherits LineActionSM
  inheritance:
  - System.Object
  - Danmokou.SM.StateMachine
  - Danmokou.SM.LineActionSM
  derivedClasses:
  - Danmokou.SM.AnimatorControllerLASM
  - Danmokou.SM.BxBCollideLASM
  - Danmokou.SM.EventLASM
  - Danmokou.SM.TimerControllerLASM
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Danmokou.SM.ReflectableLASM.#ctor(Danmokou.SM.TaskPattern)
  commentId: M:Danmokou.SM.ReflectableLASM.#ctor(Danmokou.SM.TaskPattern)
  id: '#ctor(Danmokou.SM.TaskPattern)'
  parent: Danmokou.SM.ReflectableLASM
  langs:
  - csharp
  - vb
  name: ReflectableLASM(TaskPattern)
  nameWithType: ReflectableLASM.ReflectableLASM(TaskPattern)
  fullName: Danmokou.SM.ReflectableLASM.ReflectableLASM(Danmokou.SM.TaskPattern)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 14590
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public ReflectableLASM(TaskPattern func)
    parameters:
    - id: func
      type: Danmokou.SM.TaskPattern
    content.vb: Public Sub New(func As TaskPattern)
  overload: Danmokou.SM.ReflectableLASM.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Danmokou.SM.ReflectableLASM.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.ReflectableLASM.Start(Danmokou.SM.SMHandoff)
  id: Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.ReflectableLASM
  langs:
  - csharp
  - vb
  name: Start(SMHandoff)
  nameWithType: ReflectableLASM.Start(SMHandoff)
  fullName: Danmokou.SM.ReflectableLASM.Start(Danmokou.SM.SMHandoff)
  type: Method
  source:
    id: Start
    path: ''
    startLine: 14593
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public override Task Start(SMHandoff smh)
    parameters:
    - id: smh
      type: Danmokou.SM.SMHandoff
    return:
      type: Task
    content.vb: Public Overrides Function Start(smh As SMHandoff) As Task
  overridden: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  overload: Danmokou.SM.ReflectableLASM.Start*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Danmokou.SM.ReflectableLASM.op_Implicit(Danmokou.SM.TaskPattern)~Danmokou.SM.ReflectableLASM
  commentId: M:Danmokou.SM.ReflectableLASM.op_Implicit(Danmokou.SM.TaskPattern)~Danmokou.SM.ReflectableLASM
  id: op_Implicit(Danmokou.SM.TaskPattern)~Danmokou.SM.ReflectableLASM
  parent: Danmokou.SM.ReflectableLASM
  langs:
  - csharp
  - vb
  name: Implicit(TaskPattern to ReflectableLASM)
  nameWithType: ReflectableLASM.Implicit(TaskPattern to ReflectableLASM)
  fullName: Danmokou.SM.ReflectableLASM.Implicit(Danmokou.SM.TaskPattern to Danmokou.SM.ReflectableLASM)
  type: Operator
  source:
    id: op_Implicit
    path: ''
    startLine: 14595
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public static implicit operator ReflectableLASM(TaskPattern func)
    parameters:
    - id: func
      type: Danmokou.SM.TaskPattern
    return:
      type: Danmokou.SM.ReflectableLASM
    content.vb: Public Shared Widening Operator CType(func As TaskPattern) As ReflectableLASM
  overload: Danmokou.SM.ReflectableLASM.op_Implicit*
  nameWithType.vb: ReflectableLASM.Widening(TaskPattern to ReflectableLASM)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Danmokou.SM.ReflectableLASM.Widening(Danmokou.SM.TaskPattern to Danmokou.SM.ReflectableLASM)
  name.vb: Widening(TaskPattern to ReflectableLASM)
references:
- uid: Danmokou.SM
  commentId: N:Danmokou.SM
  name: Danmokou.SM
  nameWithType: Danmokou.SM
  fullName: Danmokou.SM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Danmokou.SM.StateMachine
  commentId: T:Danmokou.SM.StateMachine
  parent: Danmokou.SM
  name: StateMachine
  nameWithType: StateMachine
  fullName: Danmokou.SM.StateMachine
- uid: Danmokou.SM.LineActionSM
  commentId: T:Danmokou.SM.LineActionSM
  parent: Danmokou.SM
  name: LineActionSM
  nameWithType: LineActionSM
  fullName: Danmokou.SM.LineActionSM
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.SM.ReflectableLASM.#ctor*
  commentId: Overload:Danmokou.SM.ReflectableLASM.#ctor
  name: ReflectableLASM
  nameWithType: ReflectableLASM.ReflectableLASM
  fullName: Danmokou.SM.ReflectableLASM.ReflectableLASM
- uid: Danmokou.SM.TaskPattern
  commentId: T:Danmokou.SM.TaskPattern
  parent: Danmokou.SM
  name: TaskPattern
  nameWithType: TaskPattern
  fullName: Danmokou.SM.TaskPattern
- uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  commentId: M:Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  parent: Danmokou.SM.StateMachine
  name: Start(SMHandoff)
  nameWithType: StateMachine.Start(SMHandoff)
  fullName: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
  spec.csharp:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Danmokou.SM.StateMachine.Start(Danmokou.SM.SMHandoff)
    name: Start
    nameWithType: StateMachine.Start
    fullName: Danmokou.SM.StateMachine.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Danmokou.SM.SMHandoff
    name: SMHandoff
    nameWithType: SMHandoff
    fullName: Danmokou.SM.SMHandoff
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.ReflectableLASM.Start*
  commentId: Overload:Danmokou.SM.ReflectableLASM.Start
  name: Start
  nameWithType: ReflectableLASM.Start
  fullName: Danmokou.SM.ReflectableLASM.Start
- uid: Danmokou.SM.SMHandoff
  commentId: T:Danmokou.SM.SMHandoff
  parent: Danmokou.SM
  name: SMHandoff
  nameWithType: SMHandoff
  fullName: Danmokou.SM.SMHandoff
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Danmokou.SM.ReflectableLASM.op_Implicit*
  commentId: Overload:Danmokou.SM.ReflectableLASM.op_Implicit
  name: Implicit
  nameWithType: ReflectableLASM.Implicit
  fullName: Danmokou.SM.ReflectableLASM.Implicit
  nameWithType.vb: ReflectableLASM.Widening
  fullName.vb: Danmokou.SM.ReflectableLASM.Widening
  name.vb: Widening
- uid: Danmokou.SM.ReflectableLASM
  commentId: T:Danmokou.SM.ReflectableLASM
  parent: Danmokou.SM
  name: ReflectableLASM
  nameWithType: ReflectableLASM
  fullName: Danmokou.SM.ReflectableLASM
