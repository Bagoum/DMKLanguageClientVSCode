### YamlMime:ManagedReference
items:
- uid: Danmokou.SM.DerivedSMContext
  commentId: T:Danmokou.SM.DerivedSMContext
  id: DerivedSMContext
  parent: Danmokou.SM
  children:
  - Danmokou.SM.DerivedSMContext.CleanupObjects
  - Danmokou.SM.DerivedSMContext.DeriveFrom(Danmokou.SM.SMContext)
  - Danmokou.SM.DerivedSMContext.PhaseObjects
  langs:
  - csharp
  - vb
  name: DerivedSMContext
  nameWithType: DerivedSMContext
  fullName: Danmokou.SM.DerivedSMContext
  type: Class
  source:
    id: DerivedSMContext
    path: ''
    startLine: 16477
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  summary: "\nA SM context that does not cleanup objects when it is disposed.\n"
  example: []
  syntax:
    content: 'public class DerivedSMContext : SMContext'
    content.vb: >-
      Public Class DerivedSMContext
          Inherits SMContext
  inheritance:
  - System.Object
  - Danmokou.SM.SMContext
  inheritedMembers:
  - Danmokou.SM.SMContext.LoadCheckpoint
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Danmokou.SM.DerivedSMContext.PhaseObjects
  commentId: P:Danmokou.SM.DerivedSMContext.PhaseObjects
  id: PhaseObjects
  parent: Danmokou.SM.DerivedSMContext
  langs:
  - csharp
  - vb
  name: PhaseObjects
  nameWithType: DerivedSMContext.PhaseObjects
  fullName: Danmokou.SM.DerivedSMContext.PhaseObjects
  type: Property
  source:
    id: PhaseObjects
    path: ''
    startLine: 16479
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public override List<IDisposable> PhaseObjects { get; }
    parameters: []
    return:
      type: List{System.IDisposable}
    content.vb: Public Overrides ReadOnly Property PhaseObjects As List(Of IDisposable)
  overridden: Danmokou.SM.SMContext.PhaseObjects
  overload: Danmokou.SM.DerivedSMContext.PhaseObjects*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Danmokou.SM.DerivedSMContext.DeriveFrom(Danmokou.SM.SMContext)
  commentId: M:Danmokou.SM.DerivedSMContext.DeriveFrom(Danmokou.SM.SMContext)
  id: DeriveFrom(Danmokou.SM.SMContext)
  parent: Danmokou.SM.DerivedSMContext
  langs:
  - csharp
  - vb
  name: DeriveFrom(SMContext)
  nameWithType: DerivedSMContext.DeriveFrom(SMContext)
  fullName: Danmokou.SM.DerivedSMContext.DeriveFrom(Danmokou.SM.SMContext)
  type: Method
  source:
    id: DeriveFrom
    path: ''
    startLine: 16485
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public static DerivedSMContext DeriveFrom(SMContext parent)
    parameters:
    - id: parent
      type: Danmokou.SM.SMContext
    return:
      type: Danmokou.SM.DerivedSMContext
    content.vb: Public Shared Function DeriveFrom(parent As SMContext) As DerivedSMContext
  overload: Danmokou.SM.DerivedSMContext.DeriveFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Danmokou.SM.DerivedSMContext.CleanupObjects
  commentId: M:Danmokou.SM.DerivedSMContext.CleanupObjects
  id: CleanupObjects
  parent: Danmokou.SM.DerivedSMContext
  langs:
  - csharp
  - vb
  name: CleanupObjects()
  nameWithType: DerivedSMContext.CleanupObjects()
  fullName: Danmokou.SM.DerivedSMContext.CleanupObjects()
  type: Method
  source:
    id: CleanupObjects
    path: ''
    startLine: 16488
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.SM
  syntax:
    content: public override void CleanupObjects()
    content.vb: Public Overrides Sub CleanupObjects
  overridden: Danmokou.SM.SMContext.CleanupObjects
  overload: Danmokou.SM.DerivedSMContext.CleanupObjects*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Danmokou.SM
  commentId: N:Danmokou.SM
  name: Danmokou.SM
  nameWithType: Danmokou.SM
  fullName: Danmokou.SM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Danmokou.SM.SMContext
  commentId: T:Danmokou.SM.SMContext
  parent: Danmokou.SM
  name: SMContext
  nameWithType: SMContext
  fullName: Danmokou.SM.SMContext
- uid: Danmokou.SM.SMContext.LoadCheckpoint
  commentId: P:Danmokou.SM.SMContext.LoadCheckpoint
  parent: Danmokou.SM.SMContext
  name: LoadCheckpoint
  nameWithType: SMContext.LoadCheckpoint
  fullName: Danmokou.SM.SMContext.LoadCheckpoint
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.SM.SMContext.PhaseObjects
  commentId: P:Danmokou.SM.SMContext.PhaseObjects
  parent: Danmokou.SM.SMContext
  name: PhaseObjects
  nameWithType: SMContext.PhaseObjects
  fullName: Danmokou.SM.SMContext.PhaseObjects
- uid: Danmokou.SM.DerivedSMContext.PhaseObjects*
  commentId: Overload:Danmokou.SM.DerivedSMContext.PhaseObjects
  name: PhaseObjects
  nameWithType: DerivedSMContext.PhaseObjects
  fullName: Danmokou.SM.DerivedSMContext.PhaseObjects
- uid: List{System.IDisposable}
  commentId: '!:List{System.IDisposable}'
  definition: List`1
  name: List<IDisposable>
  nameWithType: List<IDisposable>
  fullName: List<System.IDisposable>
  nameWithType.vb: List(Of IDisposable)
  fullName.vb: List(Of System.IDisposable)
  name.vb: List(Of IDisposable)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: System.IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.DerivedSMContext.DeriveFrom*
  commentId: Overload:Danmokou.SM.DerivedSMContext.DeriveFrom
  name: DeriveFrom
  nameWithType: DerivedSMContext.DeriveFrom
  fullName: Danmokou.SM.DerivedSMContext.DeriveFrom
- uid: Danmokou.SM.DerivedSMContext
  commentId: T:Danmokou.SM.DerivedSMContext
  parent: Danmokou.SM
  name: DerivedSMContext
  nameWithType: DerivedSMContext
  fullName: Danmokou.SM.DerivedSMContext
- uid: Danmokou.SM.SMContext.CleanupObjects
  commentId: M:Danmokou.SM.SMContext.CleanupObjects
  parent: Danmokou.SM.SMContext
  name: CleanupObjects()
  nameWithType: SMContext.CleanupObjects()
  fullName: Danmokou.SM.SMContext.CleanupObjects()
  spec.csharp:
  - uid: Danmokou.SM.SMContext.CleanupObjects
    name: CleanupObjects
    nameWithType: SMContext.CleanupObjects
    fullName: Danmokou.SM.SMContext.CleanupObjects
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Danmokou.SM.SMContext.CleanupObjects
    name: CleanupObjects
    nameWithType: SMContext.CleanupObjects
    fullName: Danmokou.SM.SMContext.CleanupObjects
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.SM.DerivedSMContext.CleanupObjects*
  commentId: Overload:Danmokou.SM.DerivedSMContext.CleanupObjects
  name: CleanupObjects
  nameWithType: DerivedSMContext.CleanupObjects
  fullName: Danmokou.SM.DerivedSMContext.CleanupObjects
