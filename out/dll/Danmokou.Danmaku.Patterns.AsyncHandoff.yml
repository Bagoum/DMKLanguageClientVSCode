### YamlMime:ManagedReference
items:
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff
  commentId: T:Danmokou.Danmaku.Patterns.AsyncHandoff
  id: AsyncHandoff
  parent: Danmokou.Danmaku.Patterns
  children:
  - Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(Danmokou.Danmaku.Patterns.AsyncHandoff@,Danmokou.Danmaku.Patterns.CommonHandoff@,System.Action)
  - Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(DelegatedCreator@,System.Action,SMHandoff@)
  - Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
  - Danmokou.Danmaku.Patterns.AsyncHandoff.ch
  - Danmokou.Danmaku.Patterns.AsyncHandoff.Done
  - Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator(IEnumerator)
  langs:
  - csharp
  - vb
  name: AsyncHandoff
  nameWithType: AsyncHandoff
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff
  type: Struct
  source:
    id: AsyncHandoff
    path: ''
    startLine: 4714
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nA struct containing information about the execution of an AsyncPattern.\n<br />This struct cleans up its own resources when the callee calls its Done() method to mark completion.\n"
  example: []
  syntax:
    content: public struct AsyncHandoff
    content.vb: Public Structure AsyncHandoff
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.ch
  commentId: F:Danmokou.Danmaku.Patterns.AsyncHandoff.ch
  id: ch
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: ch
  nameWithType: AsyncHandoff.ch
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.ch
  type: Field
  source:
    id: ch
    path: ''
    startLine: 4715
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public CommonHandoff ch
    return:
      type: Danmokou.Danmaku.Patterns.CommonHandoff
    content.vb: Public ch As CommonHandoff
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
  commentId: P:Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
  id: Cancelled
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: AsyncHandoff.Cancelled
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
  type: Property
  source:
    id: Cancelled
    path: ''
    startLine: 4716
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public readonly bool Cancelled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Cancelled As Boolean
  overload: Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(DelegatedCreator@,System.Action,SMHandoff@)
  commentId: M:Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(DelegatedCreator@,System.Action,SMHandoff@)
  id: '#ctor(DelegatedCreator@,System.Action,SMHandoff@)'
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: AsyncHandoff(in DelegatedCreator, Action, in SMHandoff)
  nameWithType: AsyncHandoff.AsyncHandoff(in DelegatedCreator, Action, in SMHandoff)
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.AsyncHandoff(in DelegatedCreator, System.Action, in SMHandoff)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4723
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nThe common handoff is copied from SMHandoff.\n"
  example: []
  syntax:
    content: public AsyncHandoff(in DelegatedCreator bc, Action callback, in SMHandoff smh)
    parameters:
    - id: bc
      type: DelegatedCreator
    - id: callback
      type: System.Action
    - id: smh
      type: SMHandoff
    content.vb: Public Sub New(ByRef bc As DelegatedCreator, callback As Action, ByRef smh As SMHandoff)
  overload: Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor*
  nameWithType.vb: AsyncHandoff.AsyncHandoff(ByRef DelegatedCreator, Action, ByRef SMHandoff)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Danmokou.Danmaku.Patterns.AsyncHandoff.AsyncHandoff(ByRef DelegatedCreator, System.Action, ByRef SMHandoff)
  name.vb: AsyncHandoff(ByRef DelegatedCreator, Action, ByRef SMHandoff)
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(Danmokou.Danmaku.Patterns.AsyncHandoff@,Danmokou.Danmaku.Patterns.CommonHandoff@,System.Action)
  commentId: M:Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor(Danmokou.Danmaku.Patterns.AsyncHandoff@,Danmokou.Danmaku.Patterns.CommonHandoff@,System.Action)
  id: '#ctor(Danmokou.Danmaku.Patterns.AsyncHandoff@,Danmokou.Danmaku.Patterns.CommonHandoff@,System.Action)'
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: AsyncHandoff(in AsyncHandoff, in CommonHandoff, Action)
  nameWithType: AsyncHandoff.AsyncHandoff(in AsyncHandoff, in CommonHandoff, Action)
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.AsyncHandoff(in Danmokou.Danmaku.Patterns.AsyncHandoff, in Danmokou.Danmaku.Patterns.CommonHandoff, System.Action)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 4732
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nDerive an AsyncHandoff from a parent for localized execution. The common handoff is copied.\n"
  example: []
  syntax:
    content: public AsyncHandoff(in AsyncHandoff parent, in CommonHandoff ch, Action callback)
    parameters:
    - id: parent
      type: Danmokou.Danmaku.Patterns.AsyncHandoff
    - id: ch
      type: Danmokou.Danmaku.Patterns.CommonHandoff
    - id: callback
      type: System.Action
    content.vb: Public Sub New(ByRef parent As AsyncHandoff, ByRef ch As CommonHandoff, callback As Action)
  overload: Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor*
  nameWithType.vb: AsyncHandoff.AsyncHandoff(ByRef AsyncHandoff, ByRef CommonHandoff, Action)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Danmokou.Danmaku.Patterns.AsyncHandoff.AsyncHandoff(ByRef Danmokou.Danmaku.Patterns.AsyncHandoff, ByRef Danmokou.Danmaku.Patterns.CommonHandoff, System.Action)
  name.vb: AsyncHandoff(ByRef AsyncHandoff, ByRef CommonHandoff, Action)
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator(IEnumerator)
  commentId: M:Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator(IEnumerator)
  id: RunPrependRIEnumerator(IEnumerator)
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: RunPrependRIEnumerator(IEnumerator)
  nameWithType: AsyncHandoff.RunPrependRIEnumerator(IEnumerator)
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator(IEnumerator)
  type: Method
  source:
    id: RunPrependRIEnumerator
    path: ''
    startLine: 4739
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public void RunPrependRIEnumerator(IEnumerator cor)
    parameters:
    - id: cor
      type: IEnumerator
    content.vb: Public Sub RunPrependRIEnumerator(cor As IEnumerator)
  overload: Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.Done
  commentId: M:Danmokou.Danmaku.Patterns.AsyncHandoff.Done
  id: Done
  parent: Danmokou.Danmaku.Patterns.AsyncHandoff
  langs:
  - csharp
  - vb
  name: Done()
  nameWithType: AsyncHandoff.Done()
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.Done()
  type: Method
  source:
    id: Done
    path: ''
    startLine: 4744
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  summary: "\nSend completion information via the callback and also dispose the copied handoff.\n"
  example: []
  syntax:
    content: public readonly void Done()
    content.vb: Public Sub Done
  overload: Danmokou.Danmaku.Patterns.AsyncHandoff.Done*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
references:
- uid: Danmokou.Danmaku.Patterns
  commentId: N:Danmokou.Danmaku.Patterns
  name: Danmokou.Danmaku.Patterns
  nameWithType: Danmokou.Danmaku.Patterns
  fullName: Danmokou.Danmaku.Patterns
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.Danmaku.Patterns.CommonHandoff
  commentId: T:Danmokou.Danmaku.Patterns.CommonHandoff
  parent: Danmokou.Danmaku.Patterns
  name: CommonHandoff
  nameWithType: CommonHandoff
  fullName: Danmokou.Danmaku.Patterns.CommonHandoff
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled*
  commentId: Overload:Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
  name: Cancelled
  nameWithType: AsyncHandoff.Cancelled
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.Cancelled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor*
  commentId: Overload:Danmokou.Danmaku.Patterns.AsyncHandoff.#ctor
  name: AsyncHandoff
  nameWithType: AsyncHandoff.AsyncHandoff
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.AsyncHandoff
- uid: DelegatedCreator
  isExternal: true
  name: DelegatedCreator
  nameWithType: DelegatedCreator
  fullName: DelegatedCreator
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: SMHandoff
  isExternal: true
  name: SMHandoff
  nameWithType: SMHandoff
  fullName: SMHandoff
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff
  commentId: T:Danmokou.Danmaku.Patterns.AsyncHandoff
  parent: Danmokou.Danmaku.Patterns
  name: AsyncHandoff
  nameWithType: AsyncHandoff
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator*
  commentId: Overload:Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator
  name: RunPrependRIEnumerator
  nameWithType: AsyncHandoff.RunPrependRIEnumerator
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.RunPrependRIEnumerator
- uid: IEnumerator
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: IEnumerator
- uid: Danmokou.Danmaku.Patterns.AsyncHandoff.Done*
  commentId: Overload:Danmokou.Danmaku.Patterns.AsyncHandoff.Done
  name: Done
  nameWithType: AsyncHandoff.Done
  fullName: Danmokou.Danmaku.Patterns.AsyncHandoff.Done
