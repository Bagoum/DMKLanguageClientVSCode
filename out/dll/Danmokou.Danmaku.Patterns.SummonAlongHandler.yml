### YamlMime:ManagedReference
items:
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler
  commentId: T:Danmokou.Danmaku.Patterns.SummonAlongHandler
  id: SummonAlongHandler
  parent: Danmokou.Danmaku.Patterns
  children:
  - Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor(SAAngle,GCXF{System.Single})
  - Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle(GenCtx,V2RV2,V2RV2)
  - Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate(GenCtx)
  langs:
  - csharp
  - vb
  name: SummonAlongHandler
  nameWithType: SummonAlongHandler
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler
  type: Class
  source:
    id: SummonAlongHandler
    path: ''
    startLine: 5983
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public abstract class SummonAlongHandler
    content.vb: Public MustInherit Class SummonAlongHandler
  inheritance:
  - System.Object
  derivedClasses:
  - Danmokou.Danmaku.Patterns.SAOffsetHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor(SAAngle,GCXF{System.Single})
  commentId: M:Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor(SAAngle,GCXF{System.Single})
  id: '#ctor(SAAngle,GCXF{System.Single})'
  parent: Danmokou.Danmaku.Patterns.SummonAlongHandler
  langs:
  - csharp
  - vb
  name: SummonAlongHandler(SAAngle, GCXF<Single>)
  nameWithType: SummonAlongHandler.SummonAlongHandler(SAAngle, GCXF<Single>)
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.SummonAlongHandler(SAAngle, GCXF<System.Single>)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 5988
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: protected SummonAlongHandler(SAAngle sah, GCXF<float> offsetAngle)
    parameters:
    - id: sah
      type: SAAngle
    - id: offsetAngle
      type: GCXF{System.Single}
    content.vb: Protected Sub New(sah As SAAngle, offsetAngle As GCXF(Of Single))
  overload: Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor*
  nameWithType.vb: SummonAlongHandler.SummonAlongHandler(SAAngle, GCXF(Of Single))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Danmokou.Danmaku.Patterns.SummonAlongHandler.SummonAlongHandler(SAAngle, GCXF(Of System.Single))
  name.vb: SummonAlongHandler(SAAngle, GCXF(Of Single))
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate(GenCtx)
  commentId: M:Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate(GenCtx)
  id: Locate(GenCtx)
  parent: Danmokou.Danmaku.Patterns.SummonAlongHandler
  langs:
  - csharp
  - vb
  name: Locate(GenCtx)
  nameWithType: SummonAlongHandler.Locate(GenCtx)
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate(GenCtx)
  type: Method
  source:
    id: Locate
    path: ''
    startLine: 5993
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public abstract Vector2 Locate(GenCtx gcx)
    parameters:
    - id: gcx
      type: GenCtx
    return:
      type: Vector2
    content.vb: Public MustOverride Function Locate(gcx As GenCtx) As Vector2
  overload: Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle(GenCtx,V2RV2,V2RV2)
  commentId: M:Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle(GenCtx,V2RV2,V2RV2)
  id: Angle(GenCtx,V2RV2,V2RV2)
  parent: Danmokou.Danmaku.Patterns.SummonAlongHandler
  langs:
  - csharp
  - vb
  name: Angle(GenCtx, V2RV2, V2RV2)
  nameWithType: SummonAlongHandler.Angle(GenCtx, V2RV2, V2RV2)
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle(GenCtx, V2RV2, V2RV2)
  type: Method
  source:
    id: Angle
    path: ''
    startLine: 5994
  assemblies:
  - cs.temp.dll
  namespace: Danmokou.Danmaku.Patterns
  syntax:
    content: public V2RV2 Angle(GenCtx gcx, V2RV2 result, V2RV2 nextResult)
    parameters:
    - id: gcx
      type: GenCtx
    - id: result
      type: V2RV2
    - id: nextResult
      type: V2RV2
    return:
      type: V2RV2
    content.vb: Public Function Angle(gcx As GenCtx, result As V2RV2, nextResult As V2RV2) As V2RV2
  overload: Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Danmokou.Danmaku.Patterns
  commentId: N:Danmokou.Danmaku.Patterns
  name: Danmokou.Danmaku.Patterns
  nameWithType: Danmokou.Danmaku.Patterns
  fullName: Danmokou.Danmaku.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor*
  commentId: Overload:Danmokou.Danmaku.Patterns.SummonAlongHandler.#ctor
  name: SummonAlongHandler
  nameWithType: SummonAlongHandler.SummonAlongHandler
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.SummonAlongHandler
- uid: SAAngle
  isExternal: true
  name: SAAngle
  nameWithType: SAAngle
  fullName: SAAngle
- uid: GCXF{System.Single}
  commentId: '!:GCXF{System.Single}'
  definition: GCXF`1
  name: GCXF<Single>
  nameWithType: GCXF<Single>
  fullName: GCXF<System.Single>
  nameWithType.vb: GCXF(Of Single)
  fullName.vb: GCXF(Of System.Single)
  name.vb: GCXF(Of Single)
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: GCXF`1
  isExternal: true
  name: GCXF<>
  nameWithType: GCXF<>
  fullName: GCXF<>
  nameWithType.vb: GCXF(Of )
  fullName.vb: GCXF(Of )
  name.vb: GCXF(Of )
  spec.csharp:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: GCXF`1
    name: GCXF
    nameWithType: GCXF
    fullName: GCXF
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate*
  commentId: Overload:Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate
  name: Locate
  nameWithType: SummonAlongHandler.Locate
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.Locate
- uid: GenCtx
  isExternal: true
  name: GenCtx
  nameWithType: GenCtx
  fullName: GenCtx
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle*
  commentId: Overload:Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle
  name: Angle
  nameWithType: SummonAlongHandler.Angle
  fullName: Danmokou.Danmaku.Patterns.SummonAlongHandler.Angle
- uid: V2RV2
  isExternal: true
  name: V2RV2
  nameWithType: V2RV2
  fullName: V2RV2
